<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>BigJun&#39;s Blog</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>记录生活 分享知识</description>
    <pubDate>Wed, 27 Feb 2019 02:37:02 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>ubuntu知识资料工具箱</title>
      <link>http://yoursite.com/2019/02/24/ubuntu%E7%9F%A5%E8%AF%86%E8%B5%84%E6%96%99%E5%B7%A5%E5%85%B7%E7%AE%B1/</link>
      <guid>http://yoursite.com/2019/02/24/ubuntu%E7%9F%A5%E8%AF%86%E8%B5%84%E6%96%99%E5%B7%A5%E5%85%B7%E7%AE%B1/</guid>
      <pubDate>Sun, 24 Feb 2019 04:53:00 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="source、sh、bash以及-执行脚本区别"><a href="#source、sh、bash以及-执行脚本区别" class="headerlink" title="source、sh、bash以及./执行脚本区别"></a>source、sh、bash以及./执行脚本区别</h2><p>设置电脑可以从<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener"><strong>清华大学软件镜像</strong></a>/<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener"><strong>中国科学技术大学软件镜像中心</strong></a>中接收软件：</p><pre><code>sudo sh -c &apos;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&apos;</code></pre><blockquote><p><a href="http://man.linuxde.net/sudo" target="_blank" rel="noopener"><strong>sudo</strong></a>:用来以其他身份执行命令，预设身份为root(超级用户)，在<strong>/etc/sudoers</strong>中设置可执行用户；<strong>etc文件夹</strong>：包含各种系统配置文件（Host-specific system-wide configuration files）；<br><a href="http://man.linuxde.net/sh" target="_blank" rel="noopener"><strong>sh</strong></a>：shell命令语言解析器； <strong>Shell 既是一种脚本编程语言，也是一个连接内核和用户的软件。</strong></p><blockquote><ol><li>Linux常用<a href="https://blog.csdn.net/MonMama/article/details/53390610" target="_blank" rel="noopener">shell类型</a>：sh(Bourne shell)、bash(Bourne Again shell)、csh(C shell)、ksh(Korn shell)；Shell是一个程序，一般都是放在/bin或者/user/bin目录下；可用<code>cat /etc/shells</code>查看当前系统中可用的shell；    </li><li>Linux<strong>缺省的shell是bash</strong>，在<code>/bin/bash中</code>，可用<code>echo $SHELL</code>指令查看当前使用的shell；  </li><li><code>/bin/sh</code>之前是bash的软链，现在链接到由较复杂bash演变过来的轻量级<strong>dash</strong>，to obtain faster script execution；可用<code>ls -l /bin/sh</code>查看；</li></ol></blockquote></blockquote><blockquote><p><a href="https://blog.csdn.net/feiyu8607/article/details/7794487" target="_blank" rel="noopener">source、sh、bash以及./执行脚本区别</a>   </p></blockquote><table><thead><tr><th style="text-align:center">command</th><th style="text-align:center">usage</th><th style="text-align:center">note</th></tr></thead><tbody><tr><td style="text-align:center">source 或 .</td><td style="text-align:center">source FileName或 . FileName</td><td style="text-align:center">在<strong>当前shell</strong>中执行file中命令，文件可<strong>无执行权限</strong></td></tr><tr><td style="text-align:center"><a href="http://justcode.ikeepstudying.com/2018/02/ubuntu%EF%BC%9Ashell%E8%84%9A%E6%9C%AC%E8%BF%90%E8%A1%8C%E5%BC%82%E5%B8%B8-bash%E5%92%8Cdash%E7%9A%84%E5%8C%BA%E5%88%AB-sh%E5%92%8Cbash%E7%9A%84%E5%8C%BA%E5%88%AB-bash%E3%80%81dash%E4%B8%8Ezsh-shel/" target="_blank" rel="noopener">sh</a></td><td style="text-align:center">sh [-option] FileName</td><td style="text-align:center">在<strong>子shell</strong>（<strong>dash</strong>）中执行file中命令，文件可 <strong>无执行权限</strong>， 可使用<code>sudo dpkg-reconfigure dash</code><strong>切换shell为bash</strong></td></tr><tr><td style="text-align:center">bash</td><td style="text-align:center">bash [-option] FileName</td><td style="text-align:center">在<strong>子shell</strong>(<strong>bash</strong>)中执行file中命令，文件可 <strong>无执行权限</strong></td></tr><tr><td style="text-align:center">./</td><td style="text-align:center">./FileName(没有空格)</td><td style="text-align:center">在<strong>子shell</strong>中执行file中命令，文件需要 <strong>执行权限</strong></td></tr></tbody></table><h2 id="Linux中分号；、-amp-、-、-及其-amp-amp"><a href="#Linux中分号；、-amp-、-、-及其-amp-amp" class="headerlink" title="Linux中分号；、&amp;、|、||及其&amp;&amp;"></a>Linux中分号<code>；</code>、<code>&amp;</code>、<code>|</code>、<code>||</code>及其<code>&amp;&amp;</code></h2><blockquote><p><a href="https://www.jb51.net/article/136261.htm" target="_blank" rel="noopener">Linux中分号<code>；</code>、<code>&amp;</code>、<code>|</code>、<code>||</code>及其<code>&amp;&amp;</code></a></p></blockquote><table><thead><tr><th style="text-align:center">symbol</th><th style="text-align:center">usage</th><th style="text-align:center">note</th></tr></thead><tbody><tr><td style="text-align:center"><code>;</code></td><td style="text-align:center">command1；command2</td><td style="text-align:center">左——&gt;右执行所有命令</td></tr><tr><td style="text-align:center"><code>&amp;</code></td><td style="text-align:center">command1 &amp;</td><td style="text-align:center">后台运行程序，用于没有交互的进程</td></tr><tr><td style="text-align:center">&#124;</td><td style="text-align:center">command1 &#124; command2</td><td style="text-align:center">管道符用法：上一条命令输出为下一条命令参数：cat /etc/passwd &#124; grep /bin/bash</td></tr><tr><td style="text-align:center"><code>&amp;&amp;</code></td><td style="text-align:center">command1 &amp;&amp; command2</td><td style="text-align:center">逻辑与功能</td></tr><tr><td style="text-align:center">&#124;&#124;</td><td style="text-align:center">command1 &#124;&#124; command2</td><td style="text-align:center">逻辑或功能</td></tr></tbody></table><blockquote><blockquote><p>shell在执行某个命令的时候，会返回一个返回值，该返回值保存在shell变量 <code>$?</code> 中。当$?==0时，执行成功；当$?==1时（我认为是非0的数,返回值在0-255间），执行失败。  </p></blockquote></blockquote><blockquote><p><a href="https://www.jianshu.com/p/ac2bc0ad3d74" target="_blank" rel="noopener">Linux环境变量总结</a><br><a href="https://my.oschina.net/u/2601303/blog/1501485" target="_blank" rel="noopener">deb、rpm、tar.gz三种Linux软件包的区别</a>   </p></blockquote><table><thead><tr><th style="text-align:center">package</th><th style="text-align:center">note</th></tr></thead><tbody><tr><td style="text-align:center">deb</td><td style="text-align:center">ubuntu专用包，双击自动安装</td></tr><tr><td style="text-align:center">rmp</td><td style="text-align:center">ubuntu无法识别，红帽LINUX、SUSE、Fedora可以直接进行安装</td></tr><tr><td style="text-align:center">tar.gz</td><td style="text-align:center">for all Linux：<code>解压</code>——&gt;<code>cd到相应文件夹</code>——&gt;<code>./install</code></td></tr></tbody></table><h2 id="搜索文件-文件夹"><a href="#搜索文件-文件夹" class="headerlink" title="搜索文件/文件夹"></a>搜索文件/文件夹</h2><blockquote><ol start="2"><li>搜索文件/文件夹  <blockquote><p><code>whereis 文件名</code>：限于二进制文件(-b)、源代码文件(-s)、说明文件(-m)；<br><code>find / -name +文件名</code>：<strong>指定的目录</strong>下遍历查找，如果目录使用 / 则表示在所有目录下查找，find方式查找文件<strong>消耗资源比较大</strong>，速度也慢一点；<br><code>locate 文件名</code>：数据库文件中遍历，高效率；<br><code>which 可执行文件</code>：是在PATH变量指定的路径中，搜索某个系统命令的位置（执行的到底是哪一个位置的命令）</p></blockquote></li></ol></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>1、.bashrc文件（脚本启动文件）恢复：<code>cp /etc/skel/.bashrc ~/</code>。 <code>/etc/skel</code>存放各种初始配置文件<br>3、Linux查看IP地址：<code>ifconfig</code>或<code>hostname -I</code><br>4、<a href="https://jingyan.baidu.com/article/e4d08ffd7e8d3c0fd2f60dd7.html" target="_blank" rel="noopener">Linux常用快捷键</a><br>5、<a href="http://man.linuxde.net/lsb_release" target="_blank" rel="noopener">lsb_release命令</a>：显示LSB和特定版本的相关信息。<br>6、Linux命令行安装文件<a href="http://man.linuxde.net/wget" target="_blank" rel="noopener">wget</a>：<code>wget [-option] url</code></p></blockquote>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/24/ubuntu%E7%9F%A5%E8%AF%86%E8%B5%84%E6%96%99%E5%B7%A5%E5%85%B7%E7%AE%B1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ubuntu16.04安装与各种配置</title>
      <link>http://yoursite.com/2019/02/24/ubuntu16-04%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%84%E7%A7%8D%E9%85%8D%E7%BD%AE/</link>
      <guid>http://yoursite.com/2019/02/24/ubuntu16-04%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%84%E7%A7%8D%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Sun, 24 Feb 2019 01:01:41 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="启动盘安装Ubuntu16-04"><a href="#启动盘安装Ubuntu16-04" class="headerlink" title="启动盘安装Ubuntu16.04"></a>启动盘安装Ubuntu16.04</h2><h3 id="踩坑系列"><a href="#踩坑系列" class="headerlink" title="踩坑系列"></a>踩坑系列</h3><blockquote><ol><li>安装完成后不能进入图形界面，尝试重新安装并勾选联网下载第三方软件；</li><li>多次安装不成功，可以先通过选择<code>OME模式</code>安装来了解分盘，再重新安装；</li><li>分盘时，<code>home</code>分尽量多，不懂的就分好<code>boot</code>、<code>swap</code>（&gt;硬件内存）后将剩下的全分给<code>/</code>；</li></ol></blockquote><h2 id="安装NVIDIA驱动"><a href="#安装NVIDIA驱动" class="headerlink" title="安装NVIDIA驱动"></a>安装NVIDIA驱动</h2><blockquote><ol><li>网上很多人都说直接使用<code>sudo apt-get install nvidia-*</code><a href="https://blog.csdn.net/Hansry/article/details/81008210" target="_blank" rel="noopener">安装方式</a>易造成登录界面循环;   </li><li>ubuntu 16.04默认安装了第三方开源的驱动程序nouveau，安装nvidia显卡驱动首先需要禁用nouveau，不然会碰到冲突的问题，导致无法安装nvidia显卡驱动。</li></ol></blockquote><h3 id="下载驱动"><a href="#下载驱动" class="headerlink" title="下载驱动"></a>下载驱动</h3><ol><li><a href="https://www.nvidia.cn/Download/index.aspx?lang=cn" target="_blank" rel="noopener">官网下载</a>  <blockquote><p>可通过<code>lspci | grep -i nvidia</code>查看GPU型号；   </p></blockquote></li></ol><h3 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h3><ol start="2"><li><p>编辑文件blacklist.conf</p><blockquote><p><code>sudo gedit /etc/modprobe.d/blacklist.conf</code><br>文末插入两行：  </p><blockquote><p>blacklist nouveau<br>options nouveau modeset=0</p></blockquote></blockquote></li><li><p>更新系统  </p><blockquote><p><code>sudo update-initramfs -u</code>  </p></blockquote></li><li><p><strong>重启系统</strong>后，验证nouveau是否已禁用：没信息显示  </p><blockquote><p><code>lsmod | grep nouveau</code>  </p></blockquote></li><li><p>键盘按下<code>ctrl+alt+f1</code>进入tty控制台（<code>ctrl+alt+f7</code>可以返回图形桌面环境）  </p><blockquote><p>关闭图形界面：<code>sudo service lightdm stop</code><br>卸载原有驱动：<code>sudo apt-get remove nvidia-*</code></p></blockquote></li><li><p>安装对应版本驱动，过程中的安装选项直接默认回车</p><blockquote><p>sudo chmod  a+x NVIDIA-Linux-x86_64-396.18.run<br>sudo ./NVIDIA-Linux-x86_64-396.18.run –no-opengl-files</p></blockquote></li><li><p>重启图形界面</p><blockquote><p><code>sudo service lightdm start</code></p></blockquote></li><li><p>检查</p><blockquote><p><code>nvidia-smi</code></p></blockquote></li></ol><h2 id="安装ROS-Kinetic"><a href="#安装ROS-Kinetic" class="headerlink" title="安装ROS Kinetic"></a>安装ROS Kinetic</h2><h3 id="配置软件仓库"><a href="#配置软件仓库" class="headerlink" title="配置软件仓库"></a>配置软件仓库</h3><blockquote><p><a href="http://people.ubuntu.com/~happyaron/udc-cn/lucid-html/ch06s09.html" target="_blank" rel="noopener">软件仓库</a>：收藏专门为Ubuntu构建和挑选的软件包的仓库。   </p></blockquote><h3 id="添加sources-list"><a href="#添加sources-list" class="headerlink" title="添加sources.list"></a>添加sources.list</h3><p>设置电脑可以从<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener"><strong>清华大学软件镜像</strong></a>/<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener"><strong>中国科学技术大学软件镜像中心</strong></a>中接收软件：</p><pre><code>sudo sh -c &apos;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&apos;</code></pre><h3 id="设置key（密钥）"><a href="#设置key（密钥）" class="headerlink" title="设置key（密钥）"></a>设置key（密钥）</h3><pre><code>sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116</code></pre><blockquote><p><strong>apt-key</strong>：Debian软件包的安全管理工具。每个发布的deb包，都是通过<strong>密钥认证</strong>的，apt-key用来管理密钥。<br>确认软件源码正确性，并将其添加到操作系统的可信任列表中；<br><img src="https://i.imgur.com/H7MlCmc.png" alt=""></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>更新<strong>Debain软件包索引</strong>  </p></blockquote><pre><code>$ sudo apt-get update   </code></pre><blockquote><p>安装桌面级完成版</p></blockquote><pre><code>$ sudo apt-get install ros-kinetic-desktop-full</code></pre><blockquote><blockquote><p>更新所有已安装软件包:<code>sudo apt-get upgrade</code></p></blockquote></blockquote><h3 id="初始化rosdep"><a href="#初始化rosdep" class="headerlink" title="初始化rosdep"></a>初始化rosdep</h3><pre><code>$ sudo rosdep init$ rosdep update  </code></pre><h3 id="安装build依赖"><a href="#安装build依赖" class="headerlink" title="安装build依赖"></a>安装build依赖</h3><pre><code>$ sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential</code></pre><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><blockquote><p>每次打开新终端时<strong>自动配置ROS环境变量</strong>——&gt;添加到bash会话中</p></blockquote><pre><code>$ echo &quot;source /opt/ros/kinetic/setup.bash&quot; &gt;&gt; ~/.bashrc    $ source ~/.bashrc</code></pre><blockquote><p><a href="http://www.runoob.com/linux/linux-shell-echo.html" target="_blank" rel="noopener"><code>echo</code></a>命令用于<strong>字符串输出</strong>；<br><code>&gt;</code>输出流符号，会覆盖原来文本；<code>&gt;&gt;</code>在文末添加；</p></blockquote><h3 id="安装ROS书本CODE-amp-amp-PACKAGE"><a href="#安装ROS书本CODE-amp-amp-PACKAGE" class="headerlink" title="安装ROS书本CODE&amp;&amp;PACKAGE"></a>安装ROS书本CODE&amp;&amp;PACKAGE</h3><pre><code>1.ROS书本：A Systematic Approach to LearningRobot Programming with ROS</code></pre><blockquote><p>直接使用脚本安装（建议看一下setup脚本里面的信息：<strong>相关变量的设置</strong>）:</p><blockquote><ol><li>用户根目录下<br> <code>$ git clone https://github.com/wsnewman/learning_ros_setup_scripts.git</code></li><li>进入上面GIT下来的文件夹,改变文件可执行权限： <code>$ chmod -R +x *.sh</code>   </li><li>执行setup脚本：<br> <code>$ ./install_ros_and_tools_kinetic.sh</code>(安装相关dependencies) <code>$ ./setup_workspace_learning_ros_kinetic.sh github_username github_email</code><br>需要<a href="https://github.com/" target="_blank" rel="noopener">github官网</a>注册替换上面的<code>github_username github@email.com</code>    </li><li>执行：<code>echo &quot;export ROS_PACKAGE_PATH=~/ros_ws/src:$ROS_PACKAGE_PATH&quot; &gt;&gt; ~/.bashrc</code></li><li>有错误请参考：<a href="https://blog.csdn.net/wuguangbin1230/article/details/77803017" target="_blank" rel="noopener">安装机器人ros驱动遇到的问题（catkin_make）</a>、<a href="https://blog.csdn.net/jianghao_ava/article/details/81088364" target="_blank" rel="noopener">ros 安装问题</a></li></ol></blockquote></blockquote><h3 id="ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据"><a href="#ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据" class="headerlink" title="ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据"></a><a href="https://blog.csdn.net/jack20030552/article/details/80249231" target="_blank" rel="noopener">ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据</a></h3><h2 id="安装anaconda"><a href="#安装anaconda" class="headerlink" title="安装anaconda"></a><a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">安装anaconda</a></h2><blockquote><p>直接下载包，改权限<code>chmod +x ...</code>安装；<br>所谓的版本对应问题是：安装anaconda时会在<code>base</code>环境安装对应版本的Python </p></blockquote><h2 id="安装roboware-studio"><a href="#安装roboware-studio" class="headerlink" title="安装roboware studio"></a><a href="https://blog.csdn.net/lixujie666/article/details/80139112" target="_blank" rel="noopener">安装roboware studio</a></h2><h2 id="格式化新硬盘并挂载"><a href="#格式化新硬盘并挂载" class="headerlink" title="格式化新硬盘并挂载"></a><a href="https://cndaqiang.github.io/2017/10/11/ubuntu-disk/" target="_blank" rel="noopener">格式化新硬盘并挂载</a></h2><h2 id="ubuntu上安装Emacs"><a href="#ubuntu上安装Emacs" class="headerlink" title="ubuntu上安装Emacs"></a><a href="https://blog.csdn.net/u011596455/article/details/52914655" target="_blank" rel="noopener">ubuntu上安装Emacs</a></h2><blockquote><p>直接输入：<code>sudo apt-get install eamcs</code>   </p></blockquote><p>或：</p><pre><code>$ sudo add-apt-repository ppa:ubuntu-elisp/ppa   //获取最新的个人软件包档案源，将其添加至当前apt库中，并自动导入公钥。$ sudo apt-get update$ sudo apt-get install emacs-snapshot emacs-snapshot-el  </code></pre><blockquote><p><a href="https://blog.csdn.net/ChrisNiu1984/article/details/6620472" target="_blank" rel="noopener"><code>add-apt-repository</code></a>：将新repository添加至当前apt库中，并<strong>自动导入公钥</strong>。<img src="https://i.imgur.com/dmzSxMV.png" alt=""><br><a href="https://blog.csdn.net/orDream/article/details/79984951" target="_blank" rel="noopener">PPA(Personal Package Archives)</a>:一般形式：<code>ppa:user/ppa-name</code>   </p></blockquote><h2 id="安装shadowsocks-qt5"><a href="#安装shadowsocks-qt5" class="headerlink" title="安装shadowsocks-qt5"></a><a href="https://www.litcc.com/2016/12/29/Ubuntu16-shadowsocks-pac/index.html" target="_blank" rel="noopener">安装shadowsocks-qt5</a></h2>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/24/ubuntu16-04%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%84%E7%A7%8D%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>生活小调</title>
      <link>http://yoursite.com/2019/02/19/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/</link>
      <guid>http://yoursite.com/2019/02/19/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/</guid>
      <pubDate>Tue, 19 Feb 2019 14:29:33 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 style="text-align:center">幸福阈值</h1> <blockquote><p>以前上心理学课的时候，老师提到过一个词“阈值”。<br>他说，这世界上每个人获得快乐的条件不一样，他们的幸福阈值也不一样。<br>有的人会为了一碗热气腾腾的饭菜而感到幸福，有的人会因为喜欢的球队赢球了而快乐，也有的人只有活在生物链的顶端才觉得人生圆满。<br>阈值的高低从来没有好坏之分，不过都是在追求内心的满足。<br><strong>只不过在你感到幸福时，别忘了安静的守护别人的幸福。</strong></p></blockquote>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/19/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ENGLISH SONG SHARING</title>
      <link>http://yoursite.com/2018/09/22/ENGLISH-SONG-SHARING/</link>
      <guid>http://yoursite.com/2018/09/22/ENGLISH-SONG-SHARING/</guid>
      <pubDate>Sat, 22 Sep 2018 11:46:58 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><p style="font-size:115%;text-indent:20px"><span style="font-famliy:;font-size:150%">I</span> will share some English songs here and you are warmly welcome to leave a message about the songs you love in the comments section at the bottom of the page.I will pick the songs which can touch me.Well,enjoy the musics! </p>  <hr><p></p><h1 style="text-align:center">Say Something</h1><p></p><p style="text-indent:20px">This is a very very very sad song. When hearing the song, I can’t express my feelings in words.</p>        <div id="aplayer-FabNJKzS" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-FabNJKzS"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Say Something",              author: "A Great Big World、Christina Aguilera",              url: "https://BIGJUN777.github.io/ENGLISH-SONG-LIBRARY/1Say-Something.mp3",              pic: "https://BIGJUN777.github.io/ENGLISH-SONG-LIBRARY/1.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>   <table>  <caption style="text-align:center;font-weight:bold">Lyric</caption>  <tr>   <th>     <pre style="text-align:center;font-size:14px;padding:0px">Say something, I’m giving up on youI’ll be the one if you want me toAnywhere, I would’ve followed youSay something, I’m giving up on youAnd I’m feeling so smallIt was over my headI know nothing at allAnd I will stumble and fallI’m still learning to loveJust staring to crawlSay something, I’m giving up on youI’m sorry that I couldn’t get to you</pre>   </th>   <th>     <pre style="text-align:center;font-size:14px;padding:0px">Anywhere I would’ve followed youSay something, I’m giving up on you And I will swallow my prideYou’re the one that I loveAnd I’m saying goodbyeSay something, I’m giving up on youAnd I’m sorry that I couldn’t get to youAnd anywhere, I would have followed youOh~ ~ ~ say something, I’m giving up on youSay something, I’m giving up on youSay something</pre>   </th>  </tr></table><hr><p></p><h1 style="text-align:center">You are beautiful</h1><p></p><p style="text-indent:20px">A wonderful beginning, however, with a frustrating ending. That’s life. Not everything satisfies you. What you must keep in mind is that you should move on!If having a chance, I wanna change some lyrics to play… </p>        <div id="aplayer-KbyvInot" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-KbyvInot"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "You are beautiful",              author: "James Blunt",              url: "https://BIGJUN777.github.io/ENGLISH-SONG-LIBRARY/2You-are-Beautiful.mp3",              pic: "https://BIGJUN777.github.io/ENGLISH-SONG-LIBRARY/2.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>   <table>  <caption style="text-align:center;font-weight:bold">Lyric</caption>  <tr>   <th>     <pre style="text-align:center;font-size:14px;padding:0px">My life is brilliantMy life is brilliantMy love is pureI saw an angelOf that I’m sureShe smiled at me on the subwayShe was with another manBut I won’t lose on sleep on that<br>Cause I’ve got a planYou’re beautifulYou’re beautifulYou’re beautifulIt’s trueI saw your face in a crowded placeAnd I don’t know what to doCause I’ll never be with youYes, she caught my eyeAs we walked on byShe could see from my face that I was </pre>   </th>   <th>     <pre style="text-align:center;font-size:14px;padding:0px"> Flying highAnd I don’t think that I’ll see her againBut we shared a moment that will last till the endYou’re beautifulYou’re beautifulYou’re beautifulIt’s trueI saw your face in a crowded placeAnd I don’t know what to doCause I’ll never be with youLa la la La La La La La La La La La~ You’re beautifulYou’re beautifulYou’re beautifulIt’s trueThere must be an angel with smile on her faceWhen she thought up that she would be with you But it’s time to face the truthI will never be with you</pre>   </th>  </tr></table>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/09/22/ENGLISH-SONG-SHARING/#disqus_thread</comments>
    </item>
    
    <item>
      <title>我的博客我做主——Hexo-NexT博客框架优化</title>
      <link>http://yoursite.com/2018/07/15/Setting-up-the-Blog-Post2/</link>
      <guid>http://yoursite.com/2018/07/15/Setting-up-the-Blog-Post2/</guid>
      <pubDate>Sun, 15 Jul 2018 15:59:00 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>喜欢简约风格的我，在上文搭建好的框架上按需增加了点元素，主要分成以下三部分来表述；<img src="/2018/07/15/Setting-up-the-Blog-Post2/1.png" alt="">  </li><li><strong>请注意</strong>：本文默认将<strong>Hexo根目录</strong>下名为<code>_config.yml</code>文件称为<strong>站点配置文件</strong> ，将<strong>NexT根目录</strong>（<code>themes/next/</code>）下的<code>_config.yml</code>称为<strong>主题配置文件</strong>；  </li><li>本文所有命令均在<strong>Hexo根目录</strong>下执行；     </li><li>将新配置部署到Github时可能会出现延时，等待或多刷新几遍。<h2 id="更新信息"><a href="#更新信息" class="headerlink" title="更新信息"></a>更新信息</h2></li></ul><ol><li>2018/09/22：<a href="#music">文章添加音乐功能</a></li></ol><h2 id="博客标头配置"><a href="#博客标头配置" class="headerlink" title="博客标头配置"></a>博客标头配置</h2><ul><li><strong>网站基本信息设置：</strong>打开<strong>站点配置文件</strong>，在<code>Site</code>区域修改相应内容（<strong>注意冒号后有空格</strong>）；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/2.png" alt=""> <table> <tr>  <td>参数</td>  <td>描述</td> </tr> <tr>  <td>title</td>  <td>网站标题</td> </tr> <tr>  <td>subtitle</td>  <td>网站副标题</td> </tr> <tr>  <td>description</td>  <td>网站描述（显示在侧栏，用于SEO）</td> </tr> <tr>  <td>author</td>  <td>您的名字</td> </tr> <tr>  <td><a href="http://theme-next.iissnan.com/getting-started.html#select-language" title="NexT支持语言" target="_blank" rel="noopener">language</a></td>  <td>网站使用的语言（默认en）</td> </tr> <tr>  <td>timezone</td>  <td>网站时区（默认为电脑时区）</td> </tr></table></li><li><a href="http://theme-next.iissnan.com/getting-started.html#menu-settings" title="NexT官网——菜单设置" target="_blank" rel="noopener"><strong>网站主菜单设置</strong></a><blockquote><p>1、打开<strong>主题配置文件</strong>，找到<code>menu</code>部分，按需去掉<code>#</code>(代码顺序即为网页显示顺序)；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/3.png" alt="">  2、<strong>手动创建页面（page） </strong> ：<code>Git bash</code>中输入，执行后会在<code>Hexo根目录/source/文件夹</code>创建相应文件夹，可对里面的<code>*.md</code>文件进行修改； </p><pre><code>// 添加分类页面$ hexo new page &quot;categories&quot;// 添加标签页面$ hexo new page &quot;tags&quot;// 添加关于页面$ hexo new page &quot;about&quot;</code></pre><p><img src="/2018/07/15/Setting-up-the-Blog-Post2/4.png" alt="">  3、<strong>重新生成、部署</strong>：<code>$ hexo g</code> <code>$ hexo s</code> <code>$ hexo d</code>。<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/5.png" alt=""></p></blockquote></li></ul><h2 id="博客侧栏配置"><a href="#博客侧栏配置" class="headerlink" title="博客侧栏配置"></a>博客侧栏配置</h2><ul><li><a href="http://theme-next.iissnan.com/getting-started.html#avatar-setting" title="NexT官网——头像设置" target="_blank" rel="noopener"><strong>图像设置</strong></a>  <blockquote><p>1、编辑<strong>主题配置文件</strong>：修改<code>avatar</code>字段如下，将<code>bigjun.jpg</code>图片放进<code>themes/next/source/images/</code>下；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/6.png" alt="">   2、<a href="https://www.jianshu.com/p/b20fc983005f" title="Hexo设置主题以及Next主题个性设置(第五点)——From hydCoder " target="_blank" rel="noopener"><strong>圆形头像</strong></a>：上述设好后头像是矩形的，按个人喜好可设为圆形，打开<code>/themes/next/source/css/_common/components/sidebar</code>下的<code>sidebar-author.styl</code>文件，添加代码（参数自调）；</p><pre><code>border-radius: 50%;  -webkit-border-radius: 50%;   -moz-border-radius: 50%;   box-shadow: inset 0 -1px 0 #333sf;</code></pre><p><img src="/2018/07/15/Setting-up-the-Blog-Post2/7.png" alt="">  </p></blockquote></li><li><a href="http://theme-next.iissnan.com/theme-settings.html#author-sites" title="NexT官网——侧边栏社交链接" target="_blank" rel="noopener"><strong>社交链接</strong></a><blockquote><p>1、编辑<strong>主题配置文件</strong>：修改<code>social</code>字段，更改信息；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/8.png" alt="">   2、<strong>E-mail指向</strong>：观察Github部署我们看出，<em>本地Hexo根目录</em>下<code>source</code>文件夹的文件会直接部署到Github根目录，故我们可用<code>new page</code>搞个邮件网页，编辑新建的<code>index.md</code>文件；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/9.png" alt=""></p></blockquote></li><li><a href="https://github.com/hexojs/hexo-generator-feed#hexo-generator-feed" title="装插件与配置" target="_blank" rel="noopener"><strong>RSS</strong></a> <blockquote><p>1、<strong>插件安装</strong>：<code>$ npm install hexo-generator-feed --save</code><br>2、<strong>信息配置</strong>：在<strong>站点配置文件</strong>文末添加以下代码（配置相关信息看标头链接）：   </p><pre><code>feed:    type: rss2    path: rss2.xml    limit: 10    hub:    content: &apos;true&apos;</code></pre></blockquote></li></ul><h2 id="文章标头信息"><a href="#文章标头信息" class="headerlink" title="文章标头信息"></a>文章标头信息</h2><ul><li><strong>更新日期</strong>：修改<strong>主题配置文件</strong>，<code>post_meta</code>字段中<code>updated_at</code>值为<code>true</code>(注意空格)；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/10.png" alt="">  </li><li><strong>文章字数</strong>：1、安装插件：<code>npm install hexo-wordcount --save</code>;2、修改<strong>主题配置文件</strong>中<code>post_wordcount</code>字段中<code>wordcount</code>值为<code>true</code>；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/11.png" alt="">   </li><li><a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" title="为NexT主题添加文章阅读量统计功能——From夏末" target="_blank" rel="noopener"><strong>文章阅读量统计</strong></a>（网页上方划线部分不用看，现有NexT版本已集成了相关文件）<img src="/2018/07/15/Setting-up-the-Blog-Post2/12.png" alt="">  <pre><code>可以通过修改`../themes/next/layout/_macro`目录下的`post.swig`文件自定义排序等操作。   </code></pre></li></ul><h2 id="文章分类、贴标签、加密、结束标记"><a href="#文章分类、贴标签、加密、结束标记" class="headerlink" title="文章分类、贴标签、加密、结束标记"></a>文章分类、贴标签、加密、结束标记</h2><ul><li><strong>分类与加标签</strong>：只需在新文章开头加相应标识，如下（注意使用英文冒号<code>:</code>）：<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/13.png" alt="">  </li><li><strong>文章加密</strong>：<blockquote><p>1、打开<code>/themes/next/layout/_partials/</code>目录下的<code>head.swig</code>文件，在近末尾插入以下代码；  </p><pre><code>&lt;script&gt;    (function(){        if(&apos;{{ page.password }}&apos;){            if (prompt(&apos;请输入文章密码&apos;) !== &apos;{{ page.password }}&apos;){                alert(&apos;密码错误！&apos;);                history.back();            }        }    })();&lt;/script&gt;   </code></pre><p><img src="/2018/07/15/Setting-up-the-Blog-Post2/14.png" alt=""><br>2、在文章开头添加<code>password</code>字段，并设相应密码即可；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/15.png" alt="">   </p></blockquote></li><li><strong>文末标记添加</strong>(因为检测问题，相应代码请在参考资料1中寻找)<img src="/2018/07/15/Setting-up-the-Blog-Post2/16.png" alt="">   <blockquote><p>1、在<code>../themes/next/layout/_macro/</code>目录下创建一个名为<code>passage-end-tag.swig</code>的文件，内容如下：<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/17.png" alt="">   2、打开<code>../themes/next/layout/_macro/</code>目录下<code>post.swig</code>文件，在相应区域添加以下代码；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/18.png" alt="">   3、在<strong>主题配置文件</strong>末尾添加以下语句。  </p><pre><code>passage_end_tag:    enabled: true   </code></pre></blockquote></li><li><strong>修改模板</strong>：在Hexo根目录下的<code>scaffolds</code>文件夹下放的是我们新建页面或文章的模板，我们可以自定义模板，使用时只需加上模板名<code>$ hexo new template_name post/page_name</code>，新建文章时默认地是<code>post</code>模板，我们可做以下修改；<img src="/2018/07/15/Setting-up-the-Blog-Post2/19.png" alt="">  </li><li><p><strong id="music">添加音乐</strong>   </p><blockquote><p>添加<code>aplayer</code>插件：hexo根目录运行：<code>npm install --save hexo-tag-aplayer</code>；<br>在文章相应地方输入相应歌曲信息（其中属性值详细信息请进<a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">门</a>）：</p></blockquote><pre><code>{% aplayer "歌曲名称" "作者" "音乐_url" "封面图片_url" %}，</code></pre></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><strong>设置Hexo主题模式</strong>：打开<strong>主题配置文件</strong>，找到<code>scheme</code>字段修改；<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/20.png" alt="">  </li><li><strong>网站图标</strong>：将图片（尺寸要很少，可借鉴默认图片尺寸）放在<code>../next/source/images/</code>下，修改<strong>主题配置文件</strong>中<code>favicon</code>字段(没去深究内容的区别);<br><img src="/2018/07/15/Setting-up-the-Blog-Post2/21.png" alt="">  </li><li><strong>首页文章预览</strong>：在<strong>主题配置文件</strong>找到<code>auto_excerpt</code>字段，将<code>enable</code>值设为<code>true</code>，这样就不会首页显示全文;<img src="/2018/07/15/Setting-up-the-Blog-Post2/22.png" alt="">     </li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文通过参考前人总结的资料，结合自己的需要，对之前搭建好的框架进行了完善。简约路线为主，日后若看到有趣的元素再添加。文中若有错漏的地方或侵犯了您版权的敬请指出，确认后立即修改。接下来自己有时间就想往底层探究一下，看一下框架里众多文件相应的作用，利于个性化框架，后续待更…</p><h2 id="参考资料-拓展阅读"><a href="#参考资料-拓展阅读" class="headerlink" title="参考资料/拓展阅读"></a>参考资料/拓展阅读</h2><p>1、<a href="https://zhuanlan.zhihu.com/p/33616481" target="_blank" rel="noopener">Hexo搭建的GitHub博客之优化大全——From wangwlj</a><br>2、<a href="https://neveryu.github.io/categories/Hexo/" target="_blank" rel="noopener">Hexo-NexT搭建个人博客–From neveryu</a><br>3、<a href="http://blog.junyu.io/categories/hexo/" target="_blank" rel="noopener">博客技术– From 浚宇</a><br>4、<a href="https://hexo.io/zh-cn/docs/index.html" title="Hexo入门教程" target="_blank" rel="noopener">Hexo官方使用文档</a><br>5、<a href="http://theme-next.iissnan.com/getting-started.html" title="NexT入门教程" target="_blank" rel="noopener">NexT官方使用教程</a><br>6、<a href="https://github.com/hexojs/hexo/issues/1388" target="_blank" rel="noopener">Hexo对表格支持问题</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/07/15/Setting-up-the-Blog-Post2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>我的博客不是梦——Github Pages+Hexo搭建个人博客</title>
      <link>http://yoursite.com/2018/07/15/Setting-up-the-Blog-Post1/</link>
      <guid>http://yoursite.com/2018/07/15/Setting-up-the-Blog-Post1/</guid>
      <pubDate>Sun, 15 Jul 2018 04:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><strong>Github Pages</strong>是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点可以被<strong>免费</strong>托管在Github 上，你可以选择使用Github Pages默认提供的域名github.io或者自定义域名来发布站点；</li><li><strong>Hexo</strong>是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页；</li><li>入门级文章，所有操作基于<strong>Windows系统</strong>；文中<strong>打开文件</strong>所用的软件是<a href="https://pc.qq.com/detail/6/detail_23026.html" title="Notepad++软件下载" target="_blank" rel="noopener">Notepad++</a>（免费）或<a href="http://www.sublimetextcn.com/" title="Sublime Text 3下载，自己上网找有效的user licence" target="_blank" rel="noopener">Sublime Text</a>（需要user license）。</li></ul><h2 id="前期工作"><a href="#前期工作" class="headerlink" title="前期工作"></a>前期工作</h2><blockquote><p><strong>软件安装</strong>：与普通软件安装方式一样；安装过程中，若有<code>Add to PATH</code>选项都要勾选。   </p></blockquote><ul><li><a href="https://git-scm.com/download/win" title="Git官网下载相应版本软件包并直接安装" target="_blank" rel="noopener">下载安装Git</a>;     </li><li><a href="https://nodejs.org/en/" title="Node.js官网下载相应版本软件包并直接安装" target="_blank" rel="noopener">下载安装Node.js</a>;</li><li>Git配置：打开<em>Git Bash</em>：<code>开始菜单</code>—&gt;<code>Git</code>—&gt;<code>Git Bash</code>，并依次输入以下代码：  <pre><code>$ git config --global user.name &quot;Your Name&quot;   $ git config --global user.email &quot;email@example.com&quot;  </code></pre>  <img src="/2018/07/15/Setting-up-the-Blog-Post1/1.png" alt=""></li></ul><h2 id="配置Github"><a href="#配置Github" class="headerlink" title="配置Github"></a>配置Github</h2><ul><li><strong><a href="https://github.com" target="_blank" rel="noopener">注册并登录Github</a></strong><br><img src="/2018/07/15/Setting-up-the-Blog-Post1/2.png" alt=""></li><li><strong>创建SSH Key</strong>：打开<em>Git Bash</em>或<em>Windows CMD</em>，输入：<code>ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot;</code>，一路回车，完成后会在用户目录下生成<code>id_rsa</code>（不能泄露）和<code>id_rsa.pub</code>；<img src="/2018/07/15/Setting-up-the-Blog-Post1/3.png" alt=""><img src="/2018/07/15/Setting-up-the-Blog-Post1/4.png" alt=""></li><li><strong>添加SSH Key到Github</strong>：复制<code>id_rsa.pub</code>文件内容进行以下操作(图片来自于<a href="https://baoyuzhang.github.io/2017/04/28/%E3%80%90Hexo%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%85%A8%E7%BA%AA%E5%BD%95%E3%80%91%EF%BC%88%E4%B8%80%EF%BC%89%E4%BD%BF%E7%94%A8Git%E5%92%8CGithub/#Github%E4%B8%AD%E6%B7%BB%E5%8A%A0SSH-Key" target="_blank" rel="noopener">浅茉</a>);<img src="/2018/07/15/Setting-up-the-Blog-Post1/5.png" alt=""></li><li><strong>创建仓库</strong>，repository name必须为：<code>your-Github-name.github.io</code>;<img src="/2018/07/15/Setting-up-the-Blog-Post1/6.png" alt=""></li></ul><h2 id="基于Hexo搭建博客"><a href="#基于Hexo搭建博客" class="headerlink" title="基于Hexo搭建博客"></a>基于Hexo搭建博客</h2><ul><li><strong>安装Hexo</strong>：<em>Git bash</em>或<em>windows CMD</em>上输入：<code>$ npm install -g hexo-cli</code>；<a href="https://www.jianshu.com/p/073ed36d6ac3" title="nodejs npm 命令行大全" target="_blank" rel="noopener">nmp简介</a>；        </li><li><strong>建站/初始化</strong>：(<a href="https://hexo.io/zh-cn/docs/setup.html" title="Hexo官方使用文档——建站信息" target="_blank" rel="noopener">生成文件简介</a>)：在<em>本地合适盘</em>新建文件夹（用来放blog资料的:例如我的<code>F:\1A--BIG.JUN\Blogs\Blogs</code>）;打开这个空文件夹,右键选择<code>Git Bash Here</code> 。输入：<code>$ hexo init</code>初始化文件夹；<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/7.png" alt=""></li><li><strong>生成静态文件</strong>：<code>$ hexo generate</code>或<code>$ hexo g</code>，生成文件放在<code>public</code>文件夹下；(初始化<em>hexo</em> 之后<em>source</em>目录下自带一篇<em>hello world</em>文章)；<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/8.png" alt=""></li><li><p><strong>本地浏览</strong>： </p><blockquote><p>1、启动本地服务器：输入<code>$ hexo server</code> 或 <code>$ hexo s</code>；<br>2、在浏览器输入：<code>http://localhost:4000</code>，即可显示生成的文章网页;<br>3、停止预览：键盘<code>ctrl+c</code>。<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/9.png" alt=""> <strong>Tip</strong>：<a href="http://blog.haoji.me/windows-port-bind.html?from=xa" title="Windows下如何查看某个端口被占用" target="_blank" rel="noopener">页面不能加载或端口4000被占用情况解决方法</a></p></blockquote></li><li><p><strong>更改主题</strong><br>如果觉得默认主题不好看的，可以更改主题：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官网主题</a>、<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT主题</a>等，以NexT主题为例；`</p><blockquote><p>1、下载主题：<code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code>;<img src="/2018/07/15/Setting-up-the-Blog-Post1/10.png" alt=""> 2、应用主题：打开站点配置文件<code>_config.yml</code>，找到<code>theme</code>，更改为<code>next</code>;之后在<em>Git Bash</em>中依次输入：<code>$ hexo clean</code>（清理缓存数据）、<code>$ hexo g</code>、<code>$ hexo s</code>;<img src="/2018/07/15/Setting-up-the-Blog-Post1/11.png" alt=""> <img src="/2018/07/15/Setting-up-the-Blog-Post1/12.png" alt="">  <img src="/2018/07/15/Setting-up-the-Blog-Post1/13.png" alt=""> 3、验证主题：浏览器输入<code>http://localhost:4000</code>；<img src="/2018/07/15/Setting-up-the-Blog-Post1/14.png" alt=""></p></blockquote></li></ul><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><ul><li><strong>网站仓库路径复制</strong><br><img src="/2018/07/15/Setting-up-the-Blog-Post1/15.png" alt=""> </li><li><strong>修改站点配置文件</strong><code>_config.yml</code>,repository设为你刚才复制的仓库路径；<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/16.png" alt=""></li><li><strong>安装Git插件</strong>：<code>$ npm install hexo-deployer-git --save</code>;<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/17.png" alt="">  </li><li><strong>将新生成文件部署到Github</strong>：<code>$ hexo d</code>。<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/18.png" alt=""></li><li><strong>网站验证</strong>：浏览器输入：<code>http://bigjun777.github.io</code>(修改成你的，因为我绑定了域名，所以下图显示的是bigjun.me)。<img src="/2018/07/15/Setting-up-the-Blog-Post1/19.png" alt="">  <img src="/2018/07/15/Setting-up-the-Blog-Post1/20.png" alt="">   </li></ul><h2 id="新建文章与发布"><a href="#新建文章与发布" class="headerlink" title="新建文章与发布"></a>新建文章与发布</h2><blockquote><p>至此，我们已经完成了个人博客的搭建，接下来讲一下新建文章与发布。   </p></blockquote><ul><li><strong>新建文章</strong>：<em>Git Bash</em>中输入：<code>$ hexo new &quot;文章名&quot;</code>，看提示在相应目录下能找到<code>*文章名.md</code>文件；<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/21.png" alt=""> </li><li><strong>编辑文章</strong>：使用<a href="https://blog.huihut.com/2017/01/25/MarkdownTutorial/" title="Markdown 简易入门教程--From HuiHut" target="_blank" rel="noopener">Markdown编辑器</a>来进行编写；<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/22.png" alt="">    </li><li><strong>清理缓存、刷新静态文件</strong>：依次输入<code>$ hexo clean</code>与<code>$ hexo g</code>;<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/23.png" alt="">   </li><li><strong>本地服务器浏览、部署Github</strong>：一般情况下我们先在本地<code>$ hexo s</code>本地预览文章格式没问题后，再使用<code>$ hexo d</code>上传到Github仓库,此时在浏览器输入：<code>http://bigjun777.github.io</code>，会看到新文章已经上传。<br><img src="/2018/07/15/Setting-up-the-Blog-Post1/24.png" alt=""></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>常用命令  <pre><code>$ hexo new &quot;~~~&quot;  #新建文章  $ hexo g          #生成静态文件  $ hexo s          #本地浏览  $ hexo clean      #清理缓存  $ hexo d          #部署到Github  </code></pre></li><li>上述就是基于Hexo使用Github Pages来搭建个人博客的整个入门流程，至此你已经建好博客的大体框架，知道了如何更新文章。本文旨在记录分享，通过结合前人的教程经由自己实操总结出来，个别片段、图片如有错漏或出现侵权的敬请与我联系，我定当及时处理。下一篇博文更新：<strong>我的博客我做主——Hexo-NexT博客框架优化</strong><br><img src="/2018/07/15/Setting-up-the-Blog-Post1/25.png" alt="">  </li></ul><h2 id="参考资料-拓展阅读"><a href="#参考资料-拓展阅读" class="headerlink" title="参考资料/拓展阅读"></a>参考资料/拓展阅读</h2><p>1、<a href="https://hexo.io/zh-cn/docs/index.html" title="Hexo入门教程" target="_blank" rel="noopener">Hexo官方使用文档</a><br>2、<a href="http://theme-next.iissnan.com/getting-started.html" title="NexT入门教程" target="_blank" rel="noopener">NexT官方使用教程</a><br>3、<a href="http://wangwlj.com/2017/09/08/blog_setup/" target="_blank" rel="noopener">Hexo+GitHub博客搭建实战–From wangwlj</a><br>4、<a href="https://baoyuzhang.github.io/2017/05/12/%E3%80%90Hexo%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%85%A8%E7%BA%AA%E5%BD%95%E3%80%91%EF%BC%88%E4%B8%89%EF%BC%89%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Hexo搭建独立博客全纪录（三）使用Hexo搭建博客–From浅茉</a><br>5、<a href="https://blog.csdn.net/yingzigege2/article/details/51150700" title="避免npm下载模块安装在系统盘" target="_blank" rel="noopener">修改npm下载模块安装位置</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/07/15/Setting-up-the-Blog-Post1/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
