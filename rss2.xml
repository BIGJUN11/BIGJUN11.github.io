<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>BigJun&#39;s Blog</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>记录生活 分享知识</description>
    <pubDate>Sun, 14 Apr 2019 08:43:24 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>posts_supplement</title>
      <link>http://yoursite.com/2019/04/14/posts-supplement/</link>
      <guid>http://yoursite.com/2019/04/14/posts-supplement/</guid>
      <pubDate>Sun, 14 Apr 2019 08:40:37 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><h2 id="1">Transform learning</h2><img src="/2019/04/14/posts-supplement/1.png" alt=""><p></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/04/14/posts-supplement/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CNNs</title>
      <link>http://yoursite.com/2019/04/06/CNNs/</link>
      <guid>http://yoursite.com/2019/04/06/CNNs/</guid>
      <pubDate>Sat, 06 Apr 2019 07:03:59 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><h2 id="Image-Classification-Steps"><a href="#Image-Classification-Steps" class="headerlink" title="Image Classification Steps"></a>Image Classification Steps</h2><ul><li>General Steps<blockquote><p><img src="/2019/04/06/CNNs/6.png" alt=""></p></blockquote></li></ul><h2 id="the-advantage-of-CNNs"><a href="#the-advantage-of-CNNs" class="headerlink" title="the advantage of CNNs"></a>the advantage of CNNs</h2><ul><li><p>MLPs &amp;&amp; CNNs：Fully connected &amp;&amp; Local connected<br><img src="/2019/04/06/CNNs/10.png" alt=""></p></li><li><p><strong>Local connected/Sparsely connected</strong><br><img src="/2019/04/06/CNNs/11.png" alt=""><img src="/2019/04/06/CNNs/12.png" alt=""></p></li><li><p><strong>Weights sharing</strong><br><img src="/2019/04/06/CNNs/13.png" alt=""></p></li></ul><h2 id="Basic-Concept–Ng"><a href="#Basic-Concept–Ng" class="headerlink" title="Basic Concept–Ng"></a>Basic Concept–Ng</h2><blockquote><p><a href="[http://ai-start.com/dl2017/html/lesson4-week1.html]">kernel、Padding、Strid、Convolution、Pooling</a></p></blockquote><h2 id="the-structure-of-CNNs"><a href="#the-structure-of-CNNs" class="headerlink" title="the structure of CNNs"></a>the structure of CNNs</h2><blockquote><p><img src="/2019/04/06/CNNs/9.png" alt=""> </p></blockquote><h2 id="Autoencoders-Encoders-2-Decoders"><a href="#Autoencoders-Encoders-2-Decoders" class="headerlink" title="Autoencoders/Encoders-2-Decoders"></a>Autoencoders/Encoders-2-Decoders</h2><blockquote><p>The key point is to leverage this compressed representation  </p></blockquote><ul><li>Normal images Reconstructuin<blockquote><p><img src="/2019/04/06/CNNs/14.png" alt=""></p></blockquote></li><li>Denoising Autoencoder<blockquote><p><img src="/2019/04/06/CNNs/15.png" alt="">  </p></blockquote></li></ul><h2 id="Transfer-Learning"><a href="#Transfer-Learning" class="headerlink" title="Transfer Learning"></a>Transfer Learning</h2><blockquote><p>Transfer learning involves taking a pre-trained neural network and adapting the neural network to a new, different data set.</p></blockquote><ul><li><p>Four main cases    </p><blockquote><p><img src="/2019/04/06/CNNs/19.png" alt="">Take a look <a href="https://bigjun777.github.io/2019/04/14/posts-supplement/#1" target="_blank" rel="noopener">here</a> for more detail.</p></blockquote></li><li><p>Coding part: <strong>Load the pre-trained model, modefied the model as you want, freeze specified parameters if necessary(<code>requires_grad</code>), specify optimiser if necessary</strong>  </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Load the pretrained model from pytorch</span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=True)</span><br><span class="line"># print out the model structure, see the picture below</span><br><span class="line">print(vgg16)</span><br><span class="line">print(vgg16.classifier[6].in_features) </span><br><span class="line"># Freeze training for all &quot;features&quot; layers</span><br><span class="line">for param in vgg16.features.parameters():</span><br><span class="line">   param.requires_grad = False</span><br><span class="line"># create a new classifer</span><br><span class="line">import torch.nn as nn</span><br><span class="line">n_inputs = vgg16.classifier[6].in_features</span><br><span class="line"># add last linear layer (n_inputs -&gt; 5 flower classes)</span><br><span class="line"># new layers automatically have requires_grad = True</span><br><span class="line">last_layer = nn.Linear(n_inputs, len(classes))</span><br><span class="line">vgg16.classifier[6] = last_layer</span><br><span class="line"># specify optimizer (stochastic gradient descent) and learning rate = 0.001</span><br><span class="line">optimizer = optim.SGD(vgg16.classifier.parameters(), lr=0.001)</span><br></pre></td></tr></table></figure><blockquote><p><img src="/2019/04/06/CNNs/20.png" alt=""></p></blockquote><h2 id="Style-Transfer"><a href="#Style-Transfer" class="headerlink" title="Style Transfer"></a>Style Transfer</h2></li></ul><h2 id="Weight-Initialization"><a href="#Weight-Initialization" class="headerlink" title="Weight Initialization"></a><a href="https://github.com/udacity/deep-learning-v2-pytorch/blob/master/weight-initialization/weight_initialization_solution.ipynb" target="_blank" rel="noopener">Weight Initialization</a></h2><blockquote><p>Having good initial weights can place the neural network close to the optimal solution. This allows the neural network to come to the best solution quicker.</p></blockquote><blockquote><p>If every weight is the same(<strong>constant weights</strong>), all the neurons at each layer are producing the same output. This makes it hard to decide which weights to adjust.</p></blockquote><blockquote><p>Commonly, we can use <strong>Uniform Initialization</strong>、<strong>Normal Initialization</strong></p></blockquote><h2 id="CNN中全连接层作用"><a href="#CNN中全连接层作用" class="headerlink" title="CNN中全连接层作用"></a>CNN中全连接层作用</h2><ul><li><a href="https://www.zhihu.com/question/41037974" target="_blank" rel="noopener">全连接层作用</a></li></ul><h1 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h1><h2 id="MNIST"><a href="#MNIST" class="headerlink" title="MNIST"></a>MNIST</h2><ul><li>A hand-written digits dataset:  clean.Centered, heavily pre-processed images<br><img src="/2019/04/06/CNNs/1.png" alt=""></li><li>Visualize the data: 28x28 pixels1<br><img src="/2019/04/06/CNNs/2.png" alt=""></li></ul><h2 id="CIFAR-10"><a href="#CIFAR-10" class="headerlink" title="CIFAR-10"></a>CIFAR-10</h2><ul><li>Small color images that fall into one of ten classes:60000 images(32x32)<br><img src="/2019/04/06/CNNs/8.png" alt=""></li></ul><h2 id="ImageNet"><a href="#ImageNet" class="headerlink" title="ImageNet"></a>ImageNet</h2><h1 id="Data-processsing"><a href="#Data-processsing" class="headerlink" title="Data processsing"></a>Data processsing</h1><h2 id="Data-Normalization"><a href="#Data-Normalization" class="headerlink" title="Data Normalization"></a>Data Normalization</h2><ul><li>basic<br><img src="/2019/04/06/CNNs/3.png" alt=""></li></ul><h2 id="Data-flattened"><a href="#Data-flattened" class="headerlink" title="Data flattened"></a>Data flattened</h2><ul><li>To input the data into <strong>MLPs(Multi-Layer Perceptrons)</strong>,you need to convert a maticx to a vector;<br><img src="/2019/04/06/CNNs/4.png" alt=""><img src="/2019/04/06/CNNs/5.png" alt=""></li></ul><h2 id="Data-Augmentation"><a href="#Data-Augmentation" class="headerlink" title="Data Augmentation"></a><a href="https://pytorch.org/docs/stable/torchvision/transforms.html" target="_blank" rel="noopener">Data Augmentation</a></h2><ul><li><p>To deal with:</p><blockquote><p>Scale Invariance;Rotation Invariance;Translation Invariance.</p></blockquote>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># convert data to a normalized torch.FloatTensor</span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.RandomHorizontalFlip(), # randomly flip and rotate</span><br><span class="line">    transforms.RandomRotation(10),</span><br><span class="line">    transforms.ToTensor(),  # Convert a PIL Image or numpy.ndarray to tensor.</span><br><span class="line">    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))</span><br><span class="line">    ])</span><br></pre></td></tr></table></figure></li></ul><h1 id="Coding-Part"><a href="#Coding-Part" class="headerlink" title="Coding Part"></a>Coding Part</h1><h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><ul><li><p><a href="https://pytorch.org/docs/stable/torch.html#module-torch" target="_blank" rel="noopener">Pytorch Package</a>    </p><blockquote><p> Pytorch is Python package that provides two high-level features:   </p><ol><li>Tensor computation (like NumPy) with strong GPU acceleration   </li><li>Deep neural networks built on a tape-based autograd system</li></ol></blockquote></li><li><p><a href="https://pytorch.org/docs/stable/torchvision/index.html" target="_blank" rel="noopener">torchvision</a>    </p><blockquote><p>The <code>torchvision</code> package consists of <strong>pupular datasets、model architectures、and common image transformations</strong> for computer vision;</p></blockquote></li><li><p>Import necessary libraries for working with data and Pytorch</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">import torch.nn as nn</span><br><span class="line">import torch.nn.functional as F</span><br><span class="line">import numpy as np</span><br><span class="line">from torchvision import datasets</span><br><span class="line">import torchvision.transforms as transforms</span><br></pre></td></tr></table></figure></li></ul><h2 id="Load-the-Data"><a href="#Load-the-Data" class="headerlink" title="Load the Data"></a>Load the Data</h2><ul><li><p>Common database: <code>torchvision.transforms.</code>、<code>torchvision.datasets.</code>、<code>torch.utils.data.Dataloader</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">transform = transforms.ToTensor()  or  transforms.Compose([... ,...])</span><br><span class="line">train_data = torchvision.datasets.MNIST(root=&apos;data&apos;, train=True, download=True, transform=transform)</span><br><span class="line">test_data = torchvision.datasets.MNIST(root=&apos;data&apos;, train=False, download=True, transform=transform)</span><br><span class="line">train_loader = torch.utils.data.Dataloader(train_data, batch_size=20, num_workers=0)</span><br><span class="line">test_loader = torch.utils.data.Dataloader(test_data, batch_size=20, num_workers=0)</span><br></pre></td></tr></table></figure></li><li><p>You can define a new Imagedatas class to load data from a directory: like <a href="https://pytorch.org/docs/stable/torchvision/datasets.html#imagefolder" target="_blank" rel="noopener">ImageFolder</a></p><blockquote><p><img src="/2019/04/06/CNNs/17.png" alt=""></p></blockquote></li></ul><h2 id="Visualize-the-Data"><a href="#Visualize-the-Data" class="headerlink" title="Visualize the Data"></a>Visualize the Data</h2><ul><li><p>Gray：<code>matplotlib.pyplot</code>、<a href="https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html" target="_blank" rel="noopener">plt.figure()</a>、<a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.imshow.html" target="_blank" rel="noopener">plt.imshow()</a>   </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">dataiter = iter(train_loader)</span><br><span class="line">images, labels = dataiter.next()</span><br><span class="line">images = images.numpy()# from torch to numpy</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(25,4))</span><br><span class="line">for idx in np.arange(20):</span><br><span class="line">ax = fig.add_subplot(2, 20/2, id+1, xticks=[], yticks=[])</span><br><span class="line">ax.imshow(np.squeeze(images[idx], cmap=&apos;gray&apos;))</span><br><span class="line">ax.set_title(str(labels[idx].item))</span><br></pre></td></tr></table></figure></li><li><p>RGB</p><blockquote><p><img src="/2019/04/06/CNNs/18.png" alt=""></p></blockquote></li></ul><ul><li>Single image annotation    <blockquote><p><a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.annotate.html" target="_blank" rel="noopener">matplotlib.pyplot.annotate</a>、<a href="https://blog.csdn.net/wizardforcel/article/details/54782628" target="_blank" rel="noopener">Matplotlib 中文用户指南 4.5 标注</a><img src="/2019/04/06/CNNs/16.png" alt=""></p></blockquote></li></ul><h2 id="Define-the-Network-Architecture"><a href="#Define-the-Network-Architecture" class="headerlink" title="Define the Network Architecture"></a>Define the Network <a href="https://pytorch.org/docs/stable/nn.html" target="_blank" rel="noopener">Architecture</a></h2><ul><li><p><a href="https://pytorch.org/docs/stable/nn.html?highlight=linear#torch.nn.Linear" target="_blank" rel="noopener">Linear layers</a></p><blockquote><p>torch.nn.Linear(in_features, out_features, bias=True)   </p><blockquote><p>Input: (N, *, in_features)(N,∗,in_features) where \∗ means any number of additional dimensions.</p></blockquote></blockquote></li><li><p><a href="[https://pytorch.org/docs/stable/nn.html#conv2d]">Convolutional Layers</a>    </p><blockquote><p><img src="/2019/04/06/CNNs/7.png" alt=""></p></blockquote></li><li><p>[activation、dropout function][f]</p></li></ul><h2 id="Specify-Loss-Function-and-Optimizeroptim"><a href="#Specify-Loss-Function-and-Optimizeroptim" class="headerlink" title="Specify Loss Function and Optimizeroptim"></a>Specify <a href="https://pytorch.org/docs/stable/nn.html#loss-functions" target="_blank" rel="noopener">Loss Function</a> and Optimizer<a href="https://pytorch.org/docs/stable/optim.html" target="_blank" rel="noopener">optim</a></h2><ul><li>Common：just use existed class: like <code>nn.CrossEntropyLoss()</code>. You can also define your own Loss function, it is commonly defined as a class.     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line">optimizer = torch.optim.SGD(model.parameters(), lr = 0.01)</span><br></pre></td></tr></table></figure></li></ul><h2 id="Train-the-Network"><a href="#Train-the-Network" class="headerlink" title="Train the Network"></a>Train the Network</h2><blockquote><p>The steps for training/learning from a batch of data are described in the comments below:</p><pre><code>1. Clear the gradients of all optimized variables.2. Forward pass: compute predicted outputs by passing inputs to the model.3. Calculate the loss.4. Backward pass: compute gradient of the loss with respect to model parameters.5. Perform a single optimization step(parameter update).6. Updata averge training loss.</code></pre></blockquote><ul><li>Basic process：prep model for training <code>model.train()</code>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">for data, target in train_loader:</span><br><span class="line">    # clear the gradients of all optimized variables</span><br><span class="line">    optimizer.zero_grad()</span><br><span class="line">    # forward pass: compute predicted outputs by passing inputs to the model</span><br><span class="line">    output = model(data)</span><br><span class="line">    # calculate the loss</span><br><span class="line">    loss = criterion(output, target)</span><br><span class="line">    # backward pass: compute gradient of the loss with respect to model parameters</span><br><span class="line">    loss.backward()</span><br><span class="line">    # perform a single optimization step (parameter update)</span><br><span class="line">    optimizer.step()</span><br><span class="line">    # update running training loss</span><br><span class="line">    train_loss += loss.item()*data.size(0)</span><br></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/04/06/CNNs/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Notes of Manipulation class</title>
      <link>http://yoursite.com/2019/03/25/Notes-of-Manipulation-class/</link>
      <guid>http://yoursite.com/2019/03/25/Notes-of-Manipulation-class/</guid>
      <pubDate>Mon, 25 Mar 2019 12:30:01 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Matlab-Coding"><a href="#Matlab-Coding" class="headerlink" title="Matlab Coding"></a>Matlab Coding</h1><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><ul><li><code>fprintf(&#39;...&#39;)</code>：输出字符；</li></ul><h2 id="提取数组、矩阵中元素"><a href="#提取数组、矩阵中元素" class="headerlink" title="提取数组、矩阵中元素"></a>提取数组、矩阵中元素</h2><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ a = A(1); b = B(:,1)</span><br></pre></td></tr></table></figure></code></pre><h2 id="矩阵运算：点乘、逆、转置、行列式"><a href="#矩阵运算：点乘、逆、转置、行列式" class="headerlink" title="矩阵运算：点乘、逆、转置、行列式"></a>矩阵运算：点乘、逆、转置、行列式</h2><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ans = dot(a,b)</span><br><span class="line">$ ans = inv(T)</span><br><span class="line">$ ans = T&apos;</span><br><span class="line">$ ans = det(T)</span><br></pre></td></tr></table></figure></code></pre><h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><ul><li><code>plot(x[,y][,&#39;r&#39;])</code>：直接绘制图像；   </li><li><code>subplot(221)</code>: 子窗口绘制图像；   </li><li><code>title(&#39;helloworld&#39;)</code>: 设置标题；   </li><li><code>legend(&#39;1&#39;,&#39;2&#39;,&#39;3&#39;)</code>: 按绘制顺序给图像标注；  </li><li><code>axis equal; axis([0 5 0 5])</code>: 设置轴刻度范围</li><li><code>figure(&#39;NumberTitle&#39;, &#39;off&#39;, &#39;Name&#39;, &#39;abc&#39;)</code>：隐藏标题号码，设置标题；</li></ul><h1 id="2DPose"><a href="#2DPose" class="headerlink" title="2DPose"></a>2DPose</h1><h2 id="Positon-and-Pose"><a href="#Positon-and-Pose" class="headerlink" title="Positon and Pose"></a>Positon and Pose</h2><ul><li>How to describe a point and pose? <img src="/2019/03/25/Notes-of-Manipulation-class/1.png" alt=""></li></ul><h2 id="Relative-Positions"><a href="#Relative-Positions" class="headerlink" title="Relative Positions"></a>Relative Positions</h2><ul><li>How to transform vector from one frame to another?<img src="/2019/03/25/Notes-of-Manipulation-class/2.png" alt=""></li></ul><h2 id="Relative-Poses"><a href="#Relative-Poses" class="headerlink" title="Relative Poses"></a>Relative Poses</h2><ul><li><p>How to calculate the relative points or poses?<img src="/2019/03/25/Notes-of-Manipulation-class/3.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/4.png" alt=""></p></li><li><p>Pose algebra<img src="/2019/03/25/Notes-of-Manipulation-class/5.png" alt=""></p></li></ul><h2 id="Describing-rotation"><a href="#Describing-rotation" class="headerlink" title="Describing rotation"></a>Describing rotation</h2><ul><li><p>How to calculate the rotation?<img src="/2019/03/25/Notes-of-Manipulation-class/6.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/7.png" alt=""></p></li><li><p>Rotation matix<img src="/2019/03/25/Notes-of-Manipulation-class/8.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/9.png" alt=""></p></li></ul><h2 id="Describing-rotation-and-translation"><a href="#Describing-rotation-and-translation" class="headerlink" title="Describing rotation and translation"></a>Describing rotation and translation</h2><ul><li>Homogeneous transform<img src="/2019/03/25/Notes-of-Manipulation-class/10.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/11.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/12.png" alt=""></li></ul><h2 id="Coding-Part"><a href="#Coding-Part" class="headerlink" title="Coding Part"></a>Coding Part</h2><ul><li><p><code>rot2()</code>：2 dimensional rotation matrix</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rot2(0.2) </span><br><span class="line">rot2(30, &apos;deg&apos;)</span><br></pre></td></tr></table></figure><p>  <img src="/2019/03/25/Notes-of-Manipulation-class/19.png" alt=""></p></li><li><p><code>trot2()</code>：homogeneous 2 dimensional rotation matrix</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trot2(30, &apos;deg&apos;)</span><br></pre></td></tr></table></figure><p>  <img src="/2019/03/25/Notes-of-Manipulation-class/20.png" alt=""></p></li><li><p><code>transl2()</code>： homogeneous transformation representing puretranslation</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">transl2(x,y)</span><br></pre></td></tr></table></figure><p>  <img src="/2019/03/25/Notes-of-Manipulation-class/22.png" alt=""></p></li><li><p><code>se2()</code>： homogeneous transform matrix: providing the translation in the x and y directions as well as the angle to be rotated</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">se2(x,y,angle,&apos;deg&apos;)/se2(x,y,radian)</span><br></pre></td></tr></table></figure><p>  <img src="/2019/03/25/Notes-of-Manipulation-class/21.png" alt="">    </p><blockquote><p>actually: <code>se2(x,y,angle,&#39;deg&#39;) == transl2(x,y) * trot2(angle,&#39;deg&#39;)</code></p></blockquote></li><li><p><code>e2h() &amp;&amp; h2e()</code>： function e2h converts Euclid-ean coordinates to homogeneous and h2e performs the inverse conversion;</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ p1 = h2e(inv(T1) * e2h(P)) % P = [1;2]</span><br></pre></td></tr></table></figure><blockquote><p>More compactly this can be written as</p><blockquote><p>p1 = homtrans( inv(T1), P)</p></blockquote></blockquote></li><li><p>Example1: <code>pose compounding is not commutative(交换的)</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">T1 = se2(1,2,30,&apos;deg&apos;)</span><br><span class="line">T2 = transl2(2,1) * trot2(0)</span><br><span class="line">T3 = T1 * T2    %This can be thought of the pose 2 with respect to the frame 1</span><br><span class="line">T4 = T2 * T1</span><br></pre></td></tr></table></figure><p>  <img src="/2019/03/25/Notes-of-Manipulation-class/23.png" alt=""></p></li><li><p>Example2：point with respace to 1</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p = [3 2]&apos;</span><br><span class="line">plot_point(p)</span><br><span class="line">p1 = inv(T1) * [p;1] % = p1 = inv(T1) * e2h(p)</span><br></pre></td></tr></table></figure><p>  <img src="/2019/03/25/Notes-of-Manipulation-class/24.png" alt=""></p></li></ul><h1 id="3DPose"><a href="#3DPose" class="headerlink" title="3DPose"></a>3DPose</h1><h2 id="Basic-concept"><a href="#Basic-concept" class="headerlink" title="Basic concept"></a>Basic concept</h2><ul><li><p>Point &amp;&amp; Pose<img src="/2019/03/25/Notes-of-Manipulation-class/14.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/15.png" alt=""></p></li><li><p>The Right-Hand Rule</p><blockquote><p>Angles increase positively in the anti-clockwise direction</p></blockquote><p>  <img src="/2019/03/25/Notes-of-Manipulation-class/13.png" alt=""></p><h2 id="Relative-Poses-1"><a href="#Relative-Poses-1" class="headerlink" title="Relative Poses"></a>Relative Poses</h2></li><li><p>Relative position/pose<img src="/2019/03/25/Notes-of-Manipulation-class/16.png" alt=""></p></li><li><p>Pose algebra<img src="/2019/03/25/Notes-of-Manipulation-class/17.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/18.png" alt=""></p></li></ul><h2 id="Representing-Orientation-in-3-Dimensions"><a href="#Representing-Orientation-in-3-Dimensions" class="headerlink" title="Representing Orientation in 3-Dimensions"></a>Representing Orientation in 3-Dimensions</h2><h3 id="Orthonormal-Rotation-Matrix"><a href="#Orthonormal-Rotation-Matrix" class="headerlink" title="Orthonormal Rotation Matrix"></a>Orthonormal Rotation Matrix</h3><ul><li><p>3×3 orthonormal matrix<br><img src="/2019/03/25/Notes-of-Manipulation-class/25.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/26.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/61.png" alt=""></p></li><li><p>Coding part</p><blockquote><p><code>rotx()</code>：3 dimensional rotation matrix</p></blockquote>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ R = rotx(pi/2)</span><br><span class="line">$ R = rotx(45, &apos;deg&apos;)</span><br></pre></td></tr></table></figure><blockquote><p><code>trplot() &amp;&amp; tranimate()</code>：display a 3d transformation</p></blockquote>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ trplot(R)</span><br><span class="line">$ tranimate(R)</span><br></pre></td></tr></table></figure></li></ul><h3 id="Three-Angle-Representations"><a href="#Three-Angle-Representations" class="headerlink" title="Three-Angle Representations"></a>Three-Angle Representations</h3><ul><li><p>Rotation sequences<br><img src="/2019/03/25/Notes-of-Manipulation-class/28.png" alt=""></p></li><li><p>Euler angles：Euler’s rotation theorem requires successive rotation about three axes such that notwo successive rotations are about the same axis.   </p><blockquote><p><strong>Representation</strong></p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/27.png" alt=""></p></blockquote></blockquote><blockquote><p><strong>Coding</strong>:</p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/29.png" alt=""></p></blockquote></blockquote><blockquote><p><strong>if θ is negative</strong></p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/30.png" alt=""></p></blockquote></blockquote><blockquote><p><strong>if θ=0</strong></p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/31.png" alt=""></p></blockquote></blockquote></li><li><p>Cardan angles/Roll-Pitch-Yaw angles</p><blockquote><p><strong>Representation</strong></p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/32.png" alt=""></p></blockquote></blockquote><blockquote><p><strong>Coding</strong></p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/33.png" alt=""></p></blockquote></blockquote></li><li>Fundamental problem：Singularities and Gimbal Lock<blockquote><p>This occurs when the rotational axis of the middle term in the sequence becomes parallel to the rotation axis of the first or third term. </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/34.png" alt=""></p></blockquote></blockquote></li></ul><h3 id="Two-Vector-Representation"><a href="#Two-Vector-Representation" class="headerlink" title="Two Vector Representation"></a>Two Vector Representation</h3><ul><li>Two Vector Representation<blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/35.png" alt=""></p></blockquote></li></ul><h3 id="Rotation-about-an-Arbitrary-Vector"><a href="#Rotation-about-an-Arbitrary-Vector" class="headerlink" title="Rotation about an Arbitrary Vector"></a>Rotation about an Arbitrary Vector</h3><ul><li><p>Any two independent orthonormal coordinate frames can be related by a single rotation about some axis.</p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/47.png" alt=""></p></blockquote></li><li><p>Finding the axis;</p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/48.png" alt=""></p></blockquote></li><li><p>Coding part: <code>tr2angvec(R)、eig(R)、angvec2r(pi/2, [1 0 0])</code></p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/49.png" alt=""><br><img src="/2019/03/25/Notes-of-Manipulation-class/50.png" alt=""><br><img src="/2019/03/25/Notes-of-Manipulation-class/51.png" alt=""></p></blockquote></li></ul><h3 id="Quaternion"><a href="#Quaternion" class="headerlink" title="Quaternion"></a>Quaternion</h3><ul><li><p>The quaternion is an extension of the complex number – a hyper-complex number – and is written as a scalar plus a vector</p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/52.png" alt=""><br><img src="/2019/03/25/Notes-of-Manipulation-class/53.png" alt=""></p></blockquote></li><li><p>Coding part：<code>Quaternion()</code> is a class</p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/54.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/55.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/56.png" alt=""></p></blockquote></li></ul><h2 id="Combining-Translation-and-Orientation"><a href="#Combining-Translation-and-Orientation" class="headerlink" title="Combining Translation and Orientation"></a>Combining Translation and Orientation</h2><h3 id="Representing-pose"><a href="#Representing-pose" class="headerlink" title="Representing pose"></a>Representing pose</h3><ul><li>Pose<blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/57.png" alt=""></p></blockquote></li></ul><h3 id="Vecotr-Quaternion"><a href="#Vecotr-Quaternion" class="headerlink" title="Vecotr-Quaternion"></a>Vecotr-Quaternion</h3><ul><li>Vecotr-Quaternion<blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/58.png" alt=""></p></blockquote></li></ul><h3 id="homogeneous-transformation-matrix"><a href="#homogeneous-transformation-matrix" class="headerlink" title="homogeneous transformation matrix"></a>homogeneous transformation matrix</h3><ul><li><p>Form</p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/59.png" alt=""></p></blockquote></li><li><p>Properties</p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/60.png" alt=""></p></blockquote></li><li><p>Coding part：<code>transl(x,y,z)、trots(pi/20)</code>  <img src="/2019/03/25/Notes-of-Manipulation-class/62.png" alt=""></p></li></ul><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul><li>Warpping up<blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/63.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/64.png" alt=""></p></blockquote></li></ul><h2 id="Coding-part"><a href="#Coding-part" class="headerlink" title="Coding part"></a>Coding part</h2><ul><li><p><code>rotx()</code>：3 dimensional rotation matrix</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ R = rotx(pi/2)</span><br><span class="line">$ R = rotx(45, &apos;deg&apos;)</span><br></pre></td></tr></table></figure></li><li><p><code>trplot() &amp;&amp; tranimate()</code>：display a 3d transformation</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ trplot(R)</span><br><span class="line">$ tranimate(R)</span><br></pre></td></tr></table></figure></li></ul><h1 id="Time-and-Motion"><a href="#Time-and-Motion" class="headerlink" title="Time and Motion"></a>Time and Motion</h1><h2 id="Trajectories"><a href="#Trajectories" class="headerlink" title="Trajectories"></a>Trajectories</h2><ul><li>An important characteristic of a trajectory is that is <strong>smooth</strong> – position and orientation vary smoothly with time  <blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/36.png" alt=""></p></blockquote></li></ul><h3 id="Smooth-One-Dimensional-Trajectories"><a href="#Smooth-One-Dimensional-Trajectories" class="headerlink" title="Smooth One-Dimensional Trajectories"></a>Smooth One-Dimensional Trajectories</h3><ul><li><p>Polynomial function of time    </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/37.png" alt=""><br><img src="/2019/03/25/Notes-of-Manipulation-class/46.png" alt=""></p></blockquote></li><li><p><code>tpoly()</code>: generates a quintic polynomial trajectory    </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/38.png" alt=""></p></blockquote><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/39.png" alt=""></p></blockquote></li><li><p><code>lspb</code>：linear segment (constant velocity) with parabolic blends    </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/40.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/41.png" alt=""></p></blockquote></li></ul><h3 id="Multi-Dimensional-Case"><a href="#Multi-Dimensional-Case" class="headerlink" title="Multi-Dimensional Case"></a>Multi-Dimensional Case</h3><ul><li><code>mtraj()/jtraj()</code>:  extend the smooth scalar trajectory to the vector case(多维)    <blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/42.png" alt=""></p></blockquote></li></ul><h3 id="Multi-Segment-Trajectories"><a href="#Multi-Segment-Trajectories" class="headerlink" title="Multi-Segment Trajectories"></a>Multi-Segment Trajectories</h3><ul><li><p>In robotics applications there is often a need to move smoothly along a path through one or more intermediate or via points without stopping. This might be to avoid obstacles in the workplace, or to perform a task that involves following a piecewise continuous trajectory.  </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/43.png" alt="">   </p></blockquote></li><li><p><code>mstraj()</code>： generates a multi-segment multi-axis trajectory based on a matrix of via points    </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/44.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/45.png" alt=""></p></blockquote></li></ul><h3 id="Interpolation-of-Orientation-in-3D"><a href="#Interpolation-of-Orientation-in-3D" class="headerlink" title="Interpolation of Orientation in 3D"></a>Interpolation of Orientation in 3D</h3><ul><li>A rotation matrix must be an orthogonal matrix     <blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/65.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/66.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/75.png" alt=""></p></blockquote></li><li>Quaternion interpolation     <blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/69.png" alt=""></p></blockquote></li></ul><ul><li><p><code>jtraj()/mtraj()</code>： roll-pitch-yaw angles can be interpolated    </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/67.png" alt=""></p></blockquote></li><li><p><code>interp()</code>    </p><blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/68.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/70.png" alt=""></p></blockquote></li></ul><h3 id="Cartesian-Motion"><a href="#Cartesian-Motion" class="headerlink" title="Cartesian Motion"></a>Cartesian Motion</h3><blockquote><p>Another common requirement is a smooth path between two poses in SE(3) which involves change in position as well as in orientation. In robotics this is often referred to as Cartesian motion.<br><img src="/2019/03/25/Notes-of-Manipulation-class/71.png" alt=""></p></blockquote><ul><li>Coding part    2019/4/13 10:36:21 2019/4/13 10:36:24 <blockquote><p><img src="/2019/03/25/Notes-of-Manipulation-class/72.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/73.png" alt=""><img src="/2019/03/25/Notes-of-Manipulation-class/74.png" alt=""></p></blockquote></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/25/Notes-of-Manipulation-class/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RNN&amp;&amp;LSTM</title>
      <link>http://yoursite.com/2019/03/24/RNN-LSTM/</link>
      <guid>http://yoursite.com/2019/03/24/RNN-LSTM/</guid>
      <pubDate>Sun, 24 Mar 2019 02:11:42 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a><a href="https://pytorch.org/docs/stable/nn.html#rnn" target="_blank" rel="noopener">RNN</a></h1><h2 id="理解RNN内部"><a href="#理解RNN内部" class="headerlink" title="理解RNN内部"></a>理解RNN内部</h2><ul><li><p><strong>我们可以用前馈神经网络（FFNNs）那样去理解</strong><img src="/2019/03/24/RNN-LSTM/3.png" alt=""><img src="/2019/03/24/RNN-LSTM/1.png" alt=""><img src="/2019/03/24/RNN-LSTM/2.png" alt=""></p></li><li><p><strong>Backpropagation through time(BBTT)</strong><img src="/2019/03/24/RNN-LSTM/4.png" alt=""><img src="/2019/03/24/RNN-LSTM/5.png" alt=""><img src="/2019/03/24/RNN-LSTM/6.png" alt=""></p><blockquote><p>For n-layers, can check <a href="https://classroom.udacity.com/nanodegrees/nd101/parts/0d85c39f-2ac0-49b3-98b0-fd40e9180cf4/modules/dd68b0bb-dd81-436f-bb04-e2a34ed349b8/lessons/74236975-4329-4704-9890-85b51f3f35fa/concepts/0f22f887-59e5-4bac-a2e9-d85c4f4b1c69" target="_blank" rel="noopener">here</a>  </p></blockquote></li></ul><h1 id="LSTM"><a href="#LSTM" class="headerlink" title="LSTM"></a>LSTM</h1><h1 id="CODING"><a href="#CODING" class="headerlink" title="CODING"></a>CODING</h1><ol><li>将数据feed给FC层之前，一般需要进行<em>“降维”</em><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># shape output to be (batch_size*seq_length, hidden_dim)</span><br><span class="line">r_out = r_out.view(-1, self.hidden_dim)  </span><br><span class="line"># sometime you may need to use contiguous to reshape the output</span><br><span class="line">r_out = r_out.contiguous().view(-1, self.hidden_dim)</span><br></pre></td></tr></table></figure></li></ol>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/24/RNN-LSTM/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Data processing with numpy or pytorch</title>
      <link>http://yoursite.com/2019/03/09/numpy-and-pytorch-in-coding/</link>
      <guid>http://yoursite.com/2019/03/09/numpy-and-pytorch-in-coding/</guid>
      <pubDate>Sat, 09 Mar 2019 04:19:03 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h1><h2 id="Numpy从数值范围创建数组：arange-、linspace-、logsapce"><a href="#Numpy从数值范围创建数组：arange-、linspace-、logsapce" class="headerlink" title="Numpy从数值范围创建数组：arange()、linspace()、logsapce()"></a><a href="http://www.runoob.com/numpy/numpy-array-from-numerical-ranges.html" target="_blank" rel="noopener">Numpy从数值范围创建数组：arange()、linspace()、logsapce()</a></h2><ul><li><code>numpy.arange(start=0, stop, step=1, dtype)</code>:  start 与 stop 指定的范围以及 step 设定的步长，生成一个 ndarray,不包含<code>stop</code>值；  </li><li><code>np.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)</code>:    创建一个等差数列构成的一维数组，<code>num</code>为样本量；  </li><li><code>np.logspace(start, stop, num=50, endpoint=True, base=10.0, dtype=None)</code>: 创建一个等比数列构成的一维数组，<code>base</code>为底；</li></ul><h1 id="Pytorch"><a href="#Pytorch" class="headerlink" title="Pytorch"></a>Pytorch</h1><h2 id="pytorch中torch-view-、squeeze-、unsqueeze-、max"><a href="#pytorch中torch-view-、squeeze-、unsqueeze-、max" class="headerlink" title="pytorch中torch.view()、squeeze()、unsqueeze()、max()"></a><a href="https://blog.csdn.net/lanse_zhicheng/article/details/79148678#commentBox" target="_blank" rel="noopener">pytorch中torch.view()、squeeze()、unsqueeze()、max()</a></h2>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/09/numpy-and-pytorch-in-coding/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Deep learning in Pytorch</title>
      <link>http://yoursite.com/2019/03/05/pytorch%EF%BC%9ADeeplearning-in-Pytorch-Udacity/</link>
      <guid>http://yoursite.com/2019/03/05/pytorch%EF%BC%9ADeeplearning-in-Pytorch-Udacity/</guid>
      <pubDate>Tue, 05 Mar 2019 11:40:24 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Architectures"><a href="#Architectures" class="headerlink" title="Architectures"></a>Architectures</h1><h1 id="Utility-tool"><a href="#Utility-tool" class="headerlink" title="Utility tool"></a>Utility tool</h1><h2 id="check-weights-or-bias"><a href="#check-weights-or-bias" class="headerlink" title="check weights or bias"></a>check weights or bias</h2><ol><li>通过<em>print</em> <code>model.state_dict()</code>或<code>model.named_parameters()</code>查看所有参数，信息包括<code>name</code>和<code>params</code>，然后使用点运算符<code>.</code>查看相应的参数；</li><li><p>通过官网查看相应网络模块具有的<code>variables</code>，然后使用点运算符<code>.</code>查看相应的参数； </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">model.fc.weight</span><br><span class="line">model.fc.bias</span><br><span class="line">model.rnn.weight_ih_l0</span><br><span class="line">model.rnn.bias_hh_l1</span><br></pre></td></tr></table></figure></li></ol><h2 id="Running-with-GPU"><a href="#Running-with-GPU" class="headerlink" title="Running with GPU"></a>Running with GPU</h2><ul><li><p>查看GPU是否可用，然后使用<code>.to()</code>使用相应device：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">device = torch.device(&quot;cuda&quot; if torch.cuda.is_available() else &quot;cpu&quot;)</span><br><span class="line">model.to(device)</span><br></pre></td></tr></table></figure></li></ul><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><h2 id="使用os模块创建文件夹"><a href="#使用os模块创建文件夹" class="headerlink" title="使用os模块创建文件夹"></a>使用<a href="http://www.runoob.com/python/os-file-methods.html" target="_blank" rel="noopener">os模块</a>创建文件夹</h2><blockquote><p>一般先使用<code>os.path.exists(path)</code>来检查相应文件夹是否存在</p><ol><li>使用<code>os.mkdir(path)</code>创建目录；</li><li>使用<code>os.makedirs(path)</code>递归创建目录；</li></ol></blockquote><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if not os.path.exists(path):</span><br><span class="line">os.makedirs(path)</span><br></pre></td></tr></table></figure></code></pre>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/05/pytorch%EF%BC%9ADeeplearning-in-Pytorch-Udacity/#disqus_thread</comments>
    </item>
    
    <item>
      <title>jupyter-notebook资料</title>
      <link>http://yoursite.com/2019/03/03/jupyter-notebook%E8%B5%84%E6%96%99/</link>
      <guid>http://yoursite.com/2019/03/03/jupyter-notebook%E8%B5%84%E6%96%99/</guid>
      <pubDate>Sun, 03 Mar 2019 08:32:02 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="本地使用服务器环境：端口映射"><a href="#本地使用服务器环境：端口映射" class="headerlink" title="本地使用服务器环境：端口映射"></a>本地使用服务器环境：端口映射</h2><blockquote><p><a href="https://blog.csdn.net/Irene_Loong/article/details/81531268" target="_blank" rel="noopener">传送门</a></p></blockquote><h2 id="在conda环境中使用，配置Python环境"><a href="#在conda环境中使用，配置Python环境" class="headerlink" title="在conda环境中使用，配置Python环境"></a>在conda环境中使用，配置Python环境</h2><blockquote><p>BG：在刚创建的<code>conda</code>环境中使用<code>jypyter-notebook</code>时，加载的还是默认的<code>Python Kernel</code><br><a href="https://xmfbit.github.io/2018/04/09/set-env-in-jupyternotebook/" target="_blank" rel="noopener">传送门1</a><br><a href="https://blog.csdn.net/jaye16/article/details/75048218" target="_blank" rel="noopener">传送门2</a></p></blockquote><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><blockquote><p><a href="https://mp.weixin.qq.com/s/u-e66SgesPjmpKEihHHr8g" target="_blank" rel="noopener">传送门</a><br>注意，安装<code>Nbextensions</code>时可能要在后面加<code>--user</code>  </p><blockquote><p>pip install jupyter_contrib_nbextensions &amp;&amp; jupyter contrib nbextension install –user</p></blockquote></blockquote><h2 id="更改工作目录"><a href="#更改工作目录" class="headerlink" title="更改工作目录"></a>更改工作目录</h2><ul><li><strong>Ubuntu</strong>：直接在相应目录启用<code>jupyter-notebook</code>;   </li><li><strong>Windows</strong>：要配置一下相应文件，<a href="https://blog.csdn.net/qq_39591494/article/details/80904814" target="_blank" rel="noopener">传送门</a>；</li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/03/jupyter-notebook%E8%B5%84%E6%96%99/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ubuntu知识资料工具箱</title>
      <link>http://yoursite.com/2019/02/24/ubuntu%E7%9F%A5%E8%AF%86%E8%B5%84%E6%96%99%E5%B7%A5%E5%85%B7%E7%AE%B1/</link>
      <guid>http://yoursite.com/2019/02/24/ubuntu%E7%9F%A5%E8%AF%86%E8%B5%84%E6%96%99%E5%B7%A5%E5%85%B7%E7%AE%B1/</guid>
      <pubDate>Sun, 24 Feb 2019 04:53:00 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="source、sh、bash以及-执行脚本区别"><a href="#source、sh、bash以及-执行脚本区别" class="headerlink" title="source、sh、bash以及./执行脚本区别"></a>source、sh、bash以及./执行脚本区别</h2><p>设置电脑可以从<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener"><strong>清华大学软件镜像</strong></a>/<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener"><strong>中国科学技术大学软件镜像中心</strong></a>中接收软件：</p><pre><code>sudo sh -c &apos;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&apos;</code></pre><blockquote><p><a href="http://man.linuxde.net/sudo" target="_blank" rel="noopener"><strong>sudo</strong></a>:用来以其他身份执行命令，预设身份为root(超级用户)，在<strong>/etc/sudoers</strong>中设置可执行用户；<strong>etc文件夹</strong>：包含各种系统配置文件（Host-specific system-wide configuration files）；<br><a href="http://man.linuxde.net/sh" target="_blank" rel="noopener"><strong>sh</strong></a>：shell命令语言解析器； <strong>Shell 既是一种脚本编程语言，也是一个连接内核和用户的软件。</strong></p><blockquote><ol><li>Linux常用<a href="https://blog.csdn.net/MonMama/article/details/53390610" target="_blank" rel="noopener">shell类型</a>：sh(Bourne shell)、bash(Bourne Again shell)、csh(C shell)、ksh(Korn shell)；Shell是一个程序，一般都是放在/bin或者/user/bin目录下；可用<code>cat /etc/shells</code>查看当前系统中可用的shell；    </li><li>Linux<strong>缺省的shell是bash</strong>，在<code>/bin/bash中</code>，可用<code>echo $SHELL</code>指令查看当前使用的shell；  </li><li><code>/bin/sh</code>之前是bash的软链，现在链接到由较复杂bash演变过来的轻量级<strong>dash</strong>，to obtain faster script execution；可用<code>ls -l /bin/sh</code>查看；</li></ol></blockquote></blockquote><blockquote><p><a href="https://blog.csdn.net/feiyu8607/article/details/7794487" target="_blank" rel="noopener">source、sh、bash以及./执行脚本区别</a>   </p></blockquote><table><thead><tr><th style="text-align:center">command</th><th style="text-align:center">usage</th><th style="text-align:center">note</th></tr></thead><tbody><tr><td style="text-align:center">source 或 .</td><td style="text-align:center">source FileName或 . FileName</td><td style="text-align:center">在<strong>当前shell</strong>中执行file中命令，文件可<strong>无执行权限</strong></td></tr><tr><td style="text-align:center"><a href="http://justcode.ikeepstudying.com/2018/02/ubuntu%EF%BC%9Ashell%E8%84%9A%E6%9C%AC%E8%BF%90%E8%A1%8C%E5%BC%82%E5%B8%B8-bash%E5%92%8Cdash%E7%9A%84%E5%8C%BA%E5%88%AB-sh%E5%92%8Cbash%E7%9A%84%E5%8C%BA%E5%88%AB-bash%E3%80%81dash%E4%B8%8Ezsh-shel/" target="_blank" rel="noopener">sh</a></td><td style="text-align:center">sh [-option] FileName</td><td style="text-align:center">在<strong>子shell</strong>（<strong>dash</strong>）中执行file中命令，文件可 <strong>无执行权限</strong>， 可使用<code>sudo dpkg-reconfigure dash</code><strong>切换shell为bash</strong></td></tr><tr><td style="text-align:center">bash</td><td style="text-align:center">bash [-option] FileName</td><td style="text-align:center">在<strong>子shell</strong>(<strong>bash</strong>)中执行file中命令，文件可 <strong>无执行权限</strong></td></tr><tr><td style="text-align:center">./</td><td style="text-align:center">./FileName(没有空格)</td><td style="text-align:center">在<strong>子shell</strong>中执行file中命令，文件需要 <strong>执行权限</strong></td></tr></tbody></table><h2 id="Linux中分号；、-amp-、-、-及其-amp-amp"><a href="#Linux中分号；、-amp-、-、-及其-amp-amp" class="headerlink" title="Linux中分号；、&amp;、|、||及其&amp;&amp;"></a>Linux中分号<code>；</code>、<code>&amp;</code>、<code>|</code>、<code>||</code>及其<code>&amp;&amp;</code></h2><blockquote><p><a href="https://www.jb51.net/article/136261.htm" target="_blank" rel="noopener">Linux中分号<code>；</code>、<code>&amp;</code>、<code>|</code>、<code>||</code>及其<code>&amp;&amp;</code></a></p></blockquote><table><thead><tr><th style="text-align:center">symbol</th><th style="text-align:center">usage</th><th style="text-align:center">note</th></tr></thead><tbody><tr><td style="text-align:center"><code>;</code></td><td style="text-align:center">command1；command2</td><td style="text-align:center">左——&gt;右执行所有命令</td></tr><tr><td style="text-align:center"><code>&amp;</code></td><td style="text-align:center">command1 &amp;</td><td style="text-align:center">后台运行程序，用于没有交互的进程</td></tr><tr><td style="text-align:center">&#124;</td><td style="text-align:center">command1 &#124; command2</td><td style="text-align:center">管道符用法：上一条命令输出为下一条命令参数：cat /etc/passwd &#124; grep /bin/bash</td></tr><tr><td style="text-align:center"><code>&amp;&amp;</code></td><td style="text-align:center">command1 &amp;&amp; command2</td><td style="text-align:center">逻辑与功能</td></tr><tr><td style="text-align:center">&#124;&#124;</td><td style="text-align:center">command1 &#124;&#124; command2</td><td style="text-align:center">逻辑或功能</td></tr></tbody></table><blockquote><blockquote><p>shell在执行某个命令的时候，会返回一个返回值，该返回值保存在shell变量 <code>$?</code> 中。当$?==0时，执行成功；当$?==1时（我认为是非0的数,返回值在0-255间），执行失败。  </p></blockquote></blockquote><blockquote><p><a href="https://www.jianshu.com/p/ac2bc0ad3d74" target="_blank" rel="noopener">Linux环境变量总结</a><br><a href="https://my.oschina.net/u/2601303/blog/1501485" target="_blank" rel="noopener">deb、rpm、tar.gz三种Linux软件包的区别</a>   </p></blockquote><table><thead><tr><th style="text-align:center">package</th><th style="text-align:center">note</th></tr></thead><tbody><tr><td style="text-align:center">deb</td><td style="text-align:center">ubuntu专用包，双击自动安装</td></tr><tr><td style="text-align:center">rmp</td><td style="text-align:center">ubuntu无法识别，红帽LINUX、SUSE、Fedora可以直接进行安装</td></tr><tr><td style="text-align:center">tar.gz</td><td style="text-align:center">for all Linux：<code>解压</code>——&gt;<code>cd到相应文件夹</code>——&gt;<code>./install</code></td></tr></tbody></table><h2 id="搜索文件-文件夹"><a href="#搜索文件-文件夹" class="headerlink" title="搜索文件/文件夹"></a>搜索文件/文件夹</h2><blockquote><ol start="2"><li>搜索文件/文件夹  <blockquote><p><code>whereis 文件名</code>：限于二进制文件(-b)、源代码文件(-s)、说明文件(-m)；<br><code>find / -name +文件名</code>：<strong>指定的目录</strong>下遍历查找，如果目录使用 / 则表示在所有目录下查找，find方式查找文件<strong>消耗资源比较大</strong>，速度也慢一点；<br><code>locate 文件名</code>：数据库文件中遍历，高效率；<br><code>which 可执行文件</code>：是在PATH变量指定的路径中，搜索某个系统命令的位置（执行的到底是哪一个位置的命令）</p></blockquote></li></ol></blockquote><h2 id="SSH文件-文件夹传输"><a href="#SSH文件-文件夹传输" class="headerlink" title="SSH文件/文件夹传输"></a>SSH文件/文件夹传输</h2><ol><li>从服务器下载<br> <code>scp [-r] &lt;用户名&gt;@&lt;ip&gt;:&lt;文件路径&gt;  &lt;本地路径&gt;</code></li><li>上传<br> <code>scp [-r] &lt;本地路径&gt; &lt;用户名&gt;@&lt;ip&gt;:&lt;文件路径&gt;</code></li></ol><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>1、.bashrc文件（脚本启动文件）恢复：<code>cp /etc/skel/.bashrc ~/</code>。 <code>/etc/skel</code>存放各种初始配置文件<br>3、Linux查看IP地址：<code>ifconfig</code>或<code>hostname -I</code><br>4、<a href="https://jingyan.baidu.com/article/e4d08ffd7e8d3c0fd2f60dd7.html" target="_blank" rel="noopener">Linux常用快捷键</a><br>5、<a href="http://man.linuxde.net/lsb_release" target="_blank" rel="noopener">lsb_release命令</a>：显示LSB和特定版本的相关信息。<br>6、Linux命令行安装文件<a href="http://man.linuxde.net/wget" target="_blank" rel="noopener">wget</a>：<code>wget [-option] url</code></p></blockquote>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/24/ubuntu%E7%9F%A5%E8%AF%86%E8%B5%84%E6%96%99%E5%B7%A5%E5%85%B7%E7%AE%B1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ubuntu16.04安装与各种配置</title>
      <link>http://yoursite.com/2019/02/24/ubuntu16-04%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%84%E7%A7%8D%E9%85%8D%E7%BD%AE/</link>
      <guid>http://yoursite.com/2019/02/24/ubuntu16-04%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%84%E7%A7%8D%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Sun, 24 Feb 2019 01:01:41 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="启动盘安装Ubuntu16-04"><a href="#启动盘安装Ubuntu16-04" class="headerlink" title="启动盘安装Ubuntu16.04"></a>启动盘安装Ubuntu16.04</h2><h3 id="踩坑系列"><a href="#踩坑系列" class="headerlink" title="踩坑系列"></a>踩坑系列</h3><blockquote><ol><li>安装完成后不能进入图形界面，尝试重新安装并勾选联网下载第三方软件；</li><li>多次安装不成功，可以先通过选择<code>OME模式</code>安装来了解分盘，再重新安装；</li><li>分盘时，<code>home</code>分尽量多，不懂的就分好<code>boot</code>、<code>swap</code>（&gt;硬件内存）后将剩下的全分给<code>/</code>；</li></ol></blockquote><h2 id="安装NVIDIA驱动"><a href="#安装NVIDIA驱动" class="headerlink" title="安装NVIDIA驱动"></a>安装NVIDIA驱动</h2><hr><blockquote><p><strong>可先试简单方法</strong>：<code>system settings</code> –&gt; <code>software&amp;update</code> –&gt; <code>additional drivers</code></p></blockquote><hr><blockquote><ol><li>网上很多人都说直接使用<code>sudo apt-get install nvidia-*</code><a href="https://blog.csdn.net/Hansry/article/details/81008210" target="_blank" rel="noopener">安装方式</a>易造成登录界面循环;   </li><li>ubuntu 16.04默认安装了第三方开源的驱动程序nouveau，安装nvidia显卡驱动首先需要禁用nouveau，不然会碰到冲突的问题，导致无法安装nvidia显卡驱动。</li></ol></blockquote><h3 id="下载驱动"><a href="#下载驱动" class="headerlink" title="下载驱动"></a>下载驱动</h3><ol><li><a href="https://www.nvidia.cn/Download/index.aspx?lang=cn" target="_blank" rel="noopener">官网下载</a>  <blockquote><p>可通过<code>lspci | grep -i nvidia</code>查看GPU型号；   </p></blockquote></li></ol><h3 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h3><ol start="2"><li><p>编辑文件blacklist.conf</p><blockquote><p><code>sudo gedit /etc/modprobe.d/blacklist.conf</code><br>文末插入两行：  </p><blockquote><p>blacklist nouveau<br>options nouveau modeset=0</p></blockquote></blockquote></li><li><p>更新系统  </p><blockquote><p><code>sudo update-initramfs -u</code>  </p></blockquote></li><li><p><strong>重启系统</strong>后，验证nouveau是否已禁用：没信息显示  </p><blockquote><p><code>lsmod | grep nouveau</code>  </p></blockquote></li><li><p>键盘按下<code>ctrl+alt+f1</code>进入tty控制台（<code>ctrl+alt+f7</code>可以返回图形桌面环境）  </p><blockquote><p>关闭图形界面：<code>sudo service lightdm stop</code><br>卸载原有驱动：<code>sudo apt-get remove nvidia-*</code></p></blockquote></li><li><p>安装对应版本驱动，（<strong>注意<code>no</code>前面是两条横线</strong>）过程中的安装选项直接默认回车</p><blockquote><p>sudo chmod  a+x NVIDIA-Linux-x86_64-396.18.run<br>sudo ./NVIDIA-Linux-x86_64-396.18.run –no-opengl-files</p></blockquote></li><li><p>重启图形界面</p><blockquote><p><code>sudo service lightdm start</code></p></blockquote></li><li><p>检查</p><blockquote><p><code>nvidia-smi</code></p></blockquote></li></ol><h2 id="安装CUDA、CUDNN"><a href="#安装CUDA、CUDNN" class="headerlink" title="安装CUDA、CUDNN"></a>安装CUDA、CUDNN</h2><blockquote><p><a href="http://www.twistedwg.com/2018/06/15/cuda9_cudnn7.html" target="_blank" rel="noopener">传送门</a>:下载cudnn时选择<code>Libary for linux</code></p></blockquote><h2 id="安装ROS-Kinetic"><a href="#安装ROS-Kinetic" class="headerlink" title="安装ROS Kinetic"></a>安装ROS Kinetic</h2><h3 id="配置软件仓库"><a href="#配置软件仓库" class="headerlink" title="配置软件仓库"></a>配置软件仓库</h3><blockquote><p><a href="http://people.ubuntu.com/~happyaron/udc-cn/lucid-html/ch06s09.html" target="_blank" rel="noopener">软件仓库</a>：收藏专门为Ubuntu构建和挑选的软件包的仓库。   </p></blockquote><h3 id="添加sources-list"><a href="#添加sources-list" class="headerlink" title="添加sources.list"></a>添加sources.list</h3><p>设置电脑可以从<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener"><strong>清华大学软件镜像</strong></a>/<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener"><strong>中国科学技术大学软件镜像中心</strong></a>中接收软件：</p><pre><code>sudo sh -c &apos;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&apos;</code></pre><h3 id="设置key（密钥）"><a href="#设置key（密钥）" class="headerlink" title="设置key（密钥）"></a>设置key（密钥）</h3><pre><code>sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116</code></pre><blockquote><p><strong>apt-key</strong>：Debian软件包的安全管理工具。每个发布的deb包，都是通过<strong>密钥认证</strong>的，apt-key用来管理密钥。<br>确认软件源码正确性，并将其添加到操作系统的可信任列表中；<br><img src="https://i.imgur.com/H7MlCmc.png" alt=""></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>更新<strong>Debain软件包索引</strong>  </p></blockquote><pre><code>$ sudo apt-get update   </code></pre><blockquote><p>安装桌面级完成版</p></blockquote><pre><code>$ sudo apt-get install ros-kinetic-desktop-full</code></pre><blockquote><blockquote><p>更新所有已安装软件包:<code>sudo apt-get upgrade</code></p></blockquote></blockquote><h3 id="初始化rosdep"><a href="#初始化rosdep" class="headerlink" title="初始化rosdep"></a>初始化rosdep</h3><pre><code>$ sudo rosdep init$ rosdep update  </code></pre><h3 id="安装build依赖"><a href="#安装build依赖" class="headerlink" title="安装build依赖"></a>安装build依赖</h3><pre><code>$ sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential</code></pre><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><blockquote><p>每次打开新终端时<strong>自动配置ROS环境变量</strong>——&gt;添加到bash会话中</p></blockquote><pre><code>$ echo &quot;source /opt/ros/kinetic/setup.bash&quot; &gt;&gt; ~/.bashrc    $ source ~/.bashrc</code></pre><blockquote><p><a href="http://www.runoob.com/linux/linux-shell-echo.html" target="_blank" rel="noopener"><code>echo</code></a>命令用于<strong>字符串输出</strong>；<br><code>&gt;</code>输出流符号，会覆盖原来文本；<code>&gt;&gt;</code>在文末添加；</p></blockquote><h3 id="安装ROS书本CODE-amp-amp-PACKAGE"><a href="#安装ROS书本CODE-amp-amp-PACKAGE" class="headerlink" title="安装ROS书本CODE&amp;&amp;PACKAGE"></a>安装ROS书本CODE&amp;&amp;PACKAGE</h3><pre><code>1.ROS书本：A Systematic Approach to LearningRobot Programming with ROS</code></pre><blockquote><p>直接使用脚本安装（建议看一下setup脚本里面的信息：<strong>相关变量的设置</strong>）:</p><blockquote><ol><li>用户根目录下<br> <code>$ git clone https://github.com/wsnewman/learning_ros_setup_scripts.git</code></li><li>进入上面GIT下来的文件夹,改变文件可执行权限： <code>$ chmod -R +x *.sh</code>   </li><li>执行setup脚本：<br> <code>$ ./install_ros_and_tools_kinetic.sh</code>(安装相关dependencies) <code>$ ./setup_workspace_learning_ros_kinetic.sh github_username github_email</code><br>需要<a href="https://github.com/" target="_blank" rel="noopener">github官网</a>注册替换上面的<code>github_username github@email.com</code>    </li><li>执行：<code>echo &quot;export ROS_PACKAGE_PATH=~/ros_ws/src:$ROS_PACKAGE_PATH&quot; &gt;&gt; ~/.bashrc</code></li><li>有错误请参考：<a href="https://blog.csdn.net/wuguangbin1230/article/details/77803017" target="_blank" rel="noopener">安装机器人ros驱动遇到的问题（catkin_make）</a>、<a href="https://blog.csdn.net/jianghao_ava/article/details/81088364" target="_blank" rel="noopener">ros 安装问题</a></li></ol></blockquote></blockquote><h3 id="ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据"><a href="#ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据" class="headerlink" title="ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据"></a><a href="https://blog.csdn.net/jack20030552/article/details/80249231" target="_blank" rel="noopener">ROS中安装、使用华硕摄像头及使用ROSbag存储摄像头数据</a></h3><h2 id="安装anaconda"><a href="#安装anaconda" class="headerlink" title="安装anaconda"></a><a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/" target="_blank" rel="noopener">安装anaconda</a></h2><blockquote><p>直接下载包，改权限<code>chmod +x ...</code>安装；<br>所谓的版本对应问题是：安装anaconda时会在<code>base</code>环境安装对应版本的Python </p></blockquote><h2 id="安装roboware-studio"><a href="#安装roboware-studio" class="headerlink" title="安装roboware studio"></a><a href="https://blog.csdn.net/lixujie666/article/details/80139112" target="_blank" rel="noopener">安装roboware studio</a></h2><h2 id="格式化新硬盘并挂载"><a href="#格式化新硬盘并挂载" class="headerlink" title="格式化新硬盘并挂载"></a><a href="https://cndaqiang.github.io/2017/10/11/ubuntu-disk/" target="_blank" rel="noopener">格式化新硬盘并挂载</a></h2><h2 id="ubuntu上安装Emacs"><a href="#ubuntu上安装Emacs" class="headerlink" title="ubuntu上安装Emacs"></a><a href="https://blog.csdn.net/u011596455/article/details/52914655" target="_blank" rel="noopener">ubuntu上安装Emacs</a></h2><blockquote><p>直接输入：<code>sudo apt-get install eamcs</code>   </p></blockquote><p>或：</p><pre><code>$ sudo add-apt-repository ppa:ubuntu-elisp/ppa   //获取最新的个人软件包档案源，将其添加至当前apt库中，并自动导入公钥。$ sudo apt-get update$ sudo apt-get install emacs-snapshot emacs-snapshot-el  </code></pre><blockquote><p><a href="https://blog.csdn.net/ChrisNiu1984/article/details/6620472" target="_blank" rel="noopener"><code>add-apt-repository</code></a>：将新repository添加至当前apt库中，并<strong>自动导入公钥</strong>。<img src="https://i.imgur.com/dmzSxMV.png" alt=""><br><a href="https://blog.csdn.net/orDream/article/details/79984951" target="_blank" rel="noopener">PPA(Personal Package Archives)</a>:一般形式：<code>ppa:user/ppa-name</code>   </p></blockquote><h2 id="安装shadowsocks-qt5"><a href="#安装shadowsocks-qt5" class="headerlink" title="安装shadowsocks-qt5"></a><a href="https://www.litcc.com/2016/12/29/Ubuntu16-shadowsocks-pac/index.html" target="_blank" rel="noopener">安装shadowsocks-qt5</a></h2><blockquote><p><a href="https://pan.baidu.com/s/1Qwr1PnEkOkd4GmVu7_820g" target="_blank" rel="noopener">SwitchOmega配置文件</a></p></blockquote><h2 id="安装MATLAB2017a"><a href="#安装MATLAB2017a" class="headerlink" title="安装MATLAB2017a"></a><a href="https://blog.csdn.net/qq_31285709/article/details/82083902" target="_blank" rel="noopener">安装MATLAB2017a</a></h2><blockquote><p>建立软链：<code>ln -s &lt;path_to_execuable&gt; &lt;path_to_direction&gt;</code><br><a href="http://petercorke.com/wordpress/toolboxes/robotics-toolbox" target="_blank" rel="noopener">安装RVC Toolox</a><br><code>sudo chmod -R 777 &lt;PACKAGE&gt;</code>、<code>sudo chown -R birl &lt;PACKAGE&gt;</code><br>卸载直接删掉安装包；</p></blockquote><h2 id="安装remarkable"><a href="#安装remarkable" class="headerlink" title="安装remarkable"></a><a href="https://blog.csdn.net/qq_41376740/article/details/79216487" target="_blank" rel="noopener">安装remarkable</a></h2>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/24/ubuntu16-04%E5%AE%89%E8%A3%85%E4%B8%8E%E5%90%84%E7%A7%8D%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>生活小调</title>
      <link>http://yoursite.com/2019/02/19/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/</link>
      <guid>http://yoursite.com/2019/02/19/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/</guid>
      <pubDate>Tue, 19 Feb 2019 14:29:33 GMT</pubDate>
      <description>
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><p style="font-size:115%;text-indent:20px"><span style="font-famliy:;font-size:150%"></span> 这是自己平常阅读时觉得写的挺好的句子段落的收集，绝大部分来自于网络端。因出处各异不好标注，若涉及到版权问题，烦请告知。 </p>  <hr><h1 style="text-align:center">幸福阈值</h1> <blockquote><p>以前上心理学课的时候，老师提到过一个词“阈值”。<br>他说，这世界上每个人获得快乐的条件不一样，他们的幸福阈值也不一样。<br>有的人会为了一碗热气腾腾的饭菜而感到幸福，有的人会因为喜欢的球队赢球了而快乐，也有的人只有活在生物链的顶端才觉得人生圆满。<br>阈值的高低从来没有好坏之分，不过都是在追求内心的满足。<br><strong>只不过在你感到幸福时，别忘了安静的守护别人的幸福。</strong></p></blockquote><h1 style="text-align:center">夸赞</h1><blockquote><p>因为我喜欢你<br>所以即使你存在缺点<br>但我还是能看到你的优点，你的努力<br><strong>在我的心中，你总是很好很好</strong></p></blockquote><blockquote><p>最好的爱，是满心的喜欢<br>只有这种发自内心的真诚的欣赏和喜欢，才能真正给到对方爱和动力  </p></blockquote>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/19/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
